
"openapi": "3.1.0"
"info":
  "title": "ONOS Core REST API"
  "description": "ONOS Core REST API"
  "version": "1.0"
"servers":
  -
    "url": "/onos/v1"
"tags":
  -
    "name": "docs"
    "description": "REST API documentation"
  -
    "name": "applications"
    "description": "Manage inventory of applications"
  -
    "name": "bit-error-rate"
  -
    "name": "cluster"
    "description": "Manage cluster of ONOS instances"
  -
    "name": "configuration"
    "description": "Manage component configurations"
  -
    "name": "keys"
    "description": "Query and Manage Device Keys"
  -
    "name": "devices"
    "description": "Manage inventory of infrastructure devices"
  -
    "name": "diagnostics"
    "description": "Provides stream of diagnostic information"
  -
    "name": "nextobjectives"
    "description": "Get Flow objective next list"
  -
    "name": "flowobjectives"
    "description": "Manage flow objectives"
  -
    "name": "flows"
    "description": "Query and program flow rules"
  -
    "name": "groups"
    "description": "Query and program group rules"
  -
    "name": "hosts"
    "description": "Manage inventory of end-station hosts"
  -
    "name": "intents"
    "description": "Query, submit and withdraw network intents"
  -
    "name": "links"
    "description": "Manage inventory of infrastructure links"
  -
    "name": "mastership"
    "description": "Manage the mastership of ONOS instances"
  -
    "name": "meters"
    "description": "Query and program meter rules"
  -
    "name": "metrics"
    "description": "Query metrics"
  -
    "name": "modulation"
    "description": "Query and program flow rules"
  -
    "name": "mcast"
    "description": "Manage the multicast routing information"
  -
    "name": "network/configuration"
    "description": "Manage network configurations"
  -
    "name": "packet/processors"
    "description": "Manage inventory of packet processors"
  -
    "name": "paths"
    "description": "Compute paths in the network graph"
  -
    "name": "regions"
    "description": "Manages region and device membership"
  -
    "name": "statistics"
    "description": "Query statistics"
  -
    "name": "system"
    "description": "Provides high-level system information, version, basic sumaries, memory usage, etc"
  -
    "name": "topology"
    "description": "Query network topology graph and its components"
  -
    "name": "ui/preferences"
    "description": "Manage user preferences"
"paths":
  "/docs/index.html":
    "get":
      "tags":
        - "docs"
      "summary": "Get Swagger UI main index page"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/docs/apis/{key: .*?}/swagger.json":
    "get":
      "tags":
        - "docs"
      "summary": "Get Swagger UI JSON"
      "parameters":
        -
          "name": "key"
          "in": "path"
          "description": "REST API web context"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/docs/apis/{key}/model.json":
    "get":
      "tags":
        - "docs"
      "summary": "Get REST API model schema"
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "REST API web context"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/docs/apis":
    "get":
      "tags":
        - "docs"
      "summary": "Get all registered REST API docs"
      "description": "Returns array of all registered API docs."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/docs":
    "get":
      "tags":
        - "docs"
      "summary": "Get Swagger UI main index page"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/docs/{resource: .*}":
    "get":
      "tags":
        - "docs"
      "summary": "Get Swagger UI resource"
      "parameters":
        -
          "name": "resource"
          "in": "path"
          "description": "path of the resource"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/{name}":
    "get":
      "tags":
        - "applications"
      "summary": "Get application details"
      "description": "Returns details of the specified application."
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "applications"
      "summary": "Uninstall application"
      "description": "Uninstalls the specified application deactivating it first if necessary."
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/{name}/health":
    "get":
      "tags":
        - "applications"
      "summary": "Get application health"
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/ids/entry":
    "get":
      "tags":
        - "applications"
      "summary": "Gets applicationId entry by either id or name"
      "parameters":
        -
          "name": "id"
          "in": "query"
          "description": "id of application"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "name"
          "in": "query"
          "description": "name of application"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications":
    "get":
      "tags":
        - "applications"
      "summary": "Get all installed applications"
      "description": "Returns array of all installed applications."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "applications"
      "summary": "Install a new application"
      "description": "Uploads application archive stream and optionally activates the\napplication."
      "parameters":
        -
          "name": "activate"
          "in": "query"
          "description": "true to activate app also"
          "required": true
          "schema":
            "type": "boolean"
      "requestBody":
        "description": "application archive stream"
        "content":
          "application/octet_stream": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/applications/{name}/bits":
    "get":
      "tags":
        - "applications"
      "summary": "Get application OAR/JAR file"
      "description": "Returns the OAR/JAR file used to install the specified application."
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/{name}/register":
    "post":
      "tags":
        - "applications"
      "summary": "Registers an on or off platform application"
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/ids":
    "get":
      "tags":
        - "applications"
      "summary": "Gets a collection of application ids"
      "description": "Returns array of all registered application ids."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/applications/{name}/active":
    "post":
      "tags":
        - "applications"
      "summary": "Activate application"
      "description": "Activates the specified application."
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "applications"
      "summary": "De-activate application"
      "description": "De-activates the specified application."
      "parameters":
        -
          "name": "name"
          "in": "path"
          "description": "application name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/bit-error-rate/{connectPoint}/pre_fec_ber":
    "get":
      "tags":
        - "bit-error-rate"
      "parameters":
        -
          "name": "connectPoint"
          "in": "path"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/bit-error-rate/{connectPoint}/post_fec_ber":
    "get":
      "tags":
        - "bit-error-rate"
      "parameters":
        -
          "name": "connectPoint"
          "in": "path"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/cluster":
    "get":
      "tags":
        - "cluster"
      "summary": "Get all cluster nodes"
      "description": "Returns array of all cluster nodes."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/cluster/{id}":
    "get":
      "tags":
        - "cluster"
      "summary": "Get cluster node details"
      "description": "Returns details of the specified cluster node."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "cluster node identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/configuration/{component}":
    "get":
      "tags":
        - "configuration"
      "summary": "Gets configuration of the specified component"
      "parameters":
        -
          "name": "component"
          "in": "path"
          "description": "component name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "configuration"
      "summary": "Selectively sets configuration properties"
      "description": "Sets only the properties present in the JSON request."
      "parameters":
        -
          "name": "component"
          "in": "path"
          "description": "component name"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "preset"
          "in": "query"
          "description": "preset the property if true"
          "required": true
          "schema":
            "type": "boolean"
      "requestBody":
        "description": "JSON configuration"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "configuration"
      "summary": "Selectively clears configuration properties"
      "description": "Clears only the properties present in the JSON request."
      "parameters":
        -
          "name": "component"
          "in": "path"
          "description": "component name"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "JSON configuration"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
  "/configuration":
    "get":
      "tags":
        - "configuration"
      "summary": "Gets all component configurations"
      "description": "Returns collection of all registered component configurations."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/configuration/{component}/{attribute}":
    "get":
      "tags":
        - "configuration"
      "summary": "Gets specified value of a specified component and variable"
      "parameters":
        -
          "name": "component"
          "in": "path"
          "description": "component name"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "attribute"
          "in": "path"
          "description": "attribute name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/keys":
    "get":
      "tags":
        - "keys"
      "summary": "Gets all device keys"
      "description": "Returns array of all device keys."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "keys"
      "summary": "Adds a new device key from the JSON input stream"
      "requestBody":
        "description": "device key JSON stream"
        "content":
          "application/json":
            "schema":
              "title": "Devicekey"
              "type": "object"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/keys/{id}":
    "get":
      "tags":
        - "keys"
      "summary": "Gets a single device key by device key unique identifier"
      "description": "Returns the specified device key."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device key identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "keys"
      "summary": "Removes a device key by device key identifier"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device key identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/devices":
    "get":
      "tags":
        - "devices"
      "summary": "Gets all infrastructure devices"
      "description": "Returns array of all discovered infrastructure devices."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/devices/ports":
    "get":
      "tags":
        - "devices"
      "summary": "Gets ports of all infrastructure devices"
      "description": "Returns port details of all infrastructure devices."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/devices/{id}":
    "get":
      "tags":
        - "devices"
      "summary": "Gets details of infrastructure device"
      "description": "Returns details of the specified infrastructure device."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "devices"
      "summary": "Removes infrastructure device"
      "description": "Administratively deletes the specified device from the inventory of\nknown devices."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/devices/{id}/ports":
    "get":
      "tags":
        - "devices"
      "summary": "Gets ports of infrastructure device"
      "description": "Returns details of the specified infrastructure device."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/devices/{id}/portstate/{port_id}":
    "post":
      "tags":
        - "devices"
      "summary": "Changes the administrative state of a port"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "port_id"
          "in": "path"
          "description": "port number"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "input JSON"
        "content":
          "application/json":
            "schema":
              "required":
                - "enabled"
              "type": "object"
              "properties":
                "enabled":
                  "type": "boolean"
                  "example": true
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/diagnostics":
    "get":
      "tags":
        - "diagnostics"
      "summary": "Get tar"
      "description": "gz stream of node diagnostic information."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/nextobjectives":
    "get":
      "tags":
        - "nextobjectives"
      "summary": "To get all obj-next-Ids"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/nextobjectives/{deviceId}":
    "get":
      "tags":
        - "nextobjectives"
      "summary": "Returns all group-chains associated with the given deviceId"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "deviceId mapping"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/nextobjectives/nextobjective/{nextId}":
    "get":
      "tags":
        - "nextobjectives"
      "summary": "Returns all group-chains associated with the given nextId"
      "parameters":
        -
          "name": "nextId"
          "in": "path"
          "description": "nextid mapping"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flowobjectives/policy":
    "post":
      "tags":
        - "flowobjectives"
      "summary": "Installs the filtering rules onto the specified device"
      "requestBody":
        "description": "filtering rule JSON"
        "content":
          "application/json":
            "schema":
              "title": "objectivePolicy"
              "required":
                - "policy"
              "type": "object"
              "properties":
                "policy":
                  "type": "string"
                  "example": "policy expression"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/flowobjectives/{deviceId}/forward":
    "post":
      "tags":
        - "flowobjectives"
      "summary": "Creates and installs a new forwarding objective for the specified device"
      "parameters":
        -
          "name": "appId"
          "in": "query"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "forwarding objective JSON"
        "content":
          "application/json":
            "schema":
              "title": "forwardingObjective"
              "required":
                - "deviceId"
                - "flag"
                - "isPermanent"
                - "operation"
                - "priority"
                - "selector"
                - "timeout"
                - "treatment"
              "type": "object"
              "properties":
                "flag":
                  "type": "string"
                  "example": "SPECIFIC"
                "priority":
                  "type": "integer"
                  "format": "int32"
                  "example": 40000
                "timeout":
                  "type": "integer"
                  "format": "int32"
                  "example": 0
                "isPermanent":
                  "type": "boolean"
                  "example": true
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "operation":
                  "type": "string"
                  "example": "ADD"
                "selector":
                  "title": "selector"
                  "required":
                    - "criteria"
                  "type": "object"
                  "properties":
                    "criteria":
                      "type": "array"
                      "xml":
                        "name": "criteria"
                        "wrapped": true
                      "items":
                        "title": "criteria"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "description": "Ethernet field name"
                            "example": "ETH_TYPE"
                          "mac":
                            "type": "string"
                            "example": "00:00:11:00:00:01"
                          "ip":
                            "type": "string"
                            "description": "IP source address"
                            "example": "10.1.1.0/24"
                          "tcpPort":
                            "type": "integer"
                            "description": "TCP source address"
                            "format": "uint16"
                            "example": 1
                          "spacingMultiplier":
                            "type": "integer"
                            "description": "Optical channel spacing multiplier"
                            "format": "int64"
                            "example": 4
                          "ochSignalId":
                            "type": "integer"
                            "description": "Optical channel signal ID"
                            "format": "int64"
                            "example": 1
                          "tributarySlotBitmap":
                            "title": "tributarySlotBitmap"
                            "type": "array"
                            "description": "OPU (Optical channel Payload Unit) slot bitmap."
                "treatment":
                  "title": "treatment"
                  "required":
                    - "instructions"
                  "type": "object"
                  "properties":
                    "instructions":
                      "title": "treatment"
                      "type": "array"
                      "items":
                        "title": "instructions"
                        "required":
                          - "port"
                          - "type"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "example": "OUTPUT"
                          "port":
                            "type": "string"
                            "example": "CONTROLLER"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/flowobjectives/next":
    "get":
      "tags":
        - "flowobjectives"
      "summary": "Returns the globally unique nextId"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flowobjectives/{deviceId}/filter":
    "post":
      "tags":
        - "flowobjectives"
      "summary": "Creates and installs a new filtering objective for the specified device"
      "parameters":
        -
          "name": "appId"
          "in": "query"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "filtering objective JSON"
        "content":
          "application/json":
            "schema":
              "title": "filteringObjective"
              "required":
                - "conditions"
                - "deviceId"
                - "isPermanent"
                - "key"
                - "operation"
                - "priority"
                - "timeout"
                - "type"
              "type": "object"
              "properties":
                "type":
                  "type": "string"
                  "example": "PERMIT"
                "priority":
                  "type": "integer"
                  "format": "int64"
                  "example": 400000
                "timeout":
                  "type": "integer"
                  "format": "int64"
                  "example": 0
                "isPermanent":
                  "type": "boolean"
                  "example": true
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "operation":
                  "type": "string"
                  "example": "ADD"
                "key":
                  "title": "key"
                  "type": "object"
                  "properties":
                    "type":
                      "type": "string"
                      "description": "Ethernet field name"
                      "example": "ETH_TYPE"
                    "mac":
                      "type": "string"
                      "example": "00:00:11:00:00:01"
                    "ip":
                      "type": "string"
                      "description": "IP source address"
                      "example": "10.1.1.0/24"
                    "tcpPort":
                      "type": "integer"
                      "description": "TCP source address"
                      "format": "uint16"
                      "example": 1
                    "spacingMultiplier":
                      "type": "integer"
                      "description": "Optical channel spacing multiplier"
                      "format": "int64"
                      "example": 4
                    "ochSignalId":
                      "type": "integer"
                      "description": "Optical channel signal ID"
                      "format": "int64"
                      "example": 1
                    "tributarySlotBitmap":
                      "title": "tributarySlotBitmap"
                      "type": "array"
                      "description": "OPU (Optical channel Payload Unit) slot bitmap."
                "conditions":
                  "type": "array"
                  "xml":
                    "name": "conditions"
                    "wrapped": true
                  "items":
                    "title": "conditions"
                    "type": "object"
                    "properties":
                      "type":
                        "type": "string"
                        "description": "Ethernet field name"
                        "example": "ETH_TYPE"
                      "mac":
                        "type": "string"
                        "example": "00:00:11:00:00:01"
                      "ip":
                        "type": "string"
                        "description": "IP source address"
                        "example": "10.1.1.0/24"
                      "tcpPort":
                        "type": "integer"
                        "description": "TCP source address"
                        "format": "uint16"
                        "example": 1
                      "spacingMultiplier":
                        "type": "integer"
                        "description": "Optical channel spacing multiplier"
                        "format": "int64"
                        "example": 4
                      "ochSignalId":
                        "type": "integer"
                        "description": "Optical channel signal ID"
                        "format": "int64"
                        "example": 1
                      "tributarySlotBitmap":
                        "title": "tributarySlotBitmap"
                        "type": "array"
                        "description": "OPU (Optical channel Payload Unit) slot bitmap."
                "treatment":
                  "title": "treatment"
                  "required":
                    - "instructions"
                  "type": "object"
                  "properties":
                    "instructions":
                      "title": "treatment"
                      "type": "array"
                      "items":
                        "title": "instructions"
                        "required":
                          - "port"
                          - "type"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "example": "OUTPUT"
                          "port":
                            "type": "string"
                            "example": "CONTROLLER"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/flowobjectives/{deviceId}/next":
    "post":
      "tags":
        - "flowobjectives"
      "summary": "Creates and installs a new next objective for the specified device"
      "parameters":
        -
          "name": "appId"
          "in": "query"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "next objective JSON"
        "content":
          "application/json":
            "schema":
              "title": "nextObjective"
              "required":
                - "deviceId"
                - "id"
                - "isPermanent"
                - "meta"
                - "operation"
                - "priority"
                - "timeout"
                - "treatments"
                - "type"
              "type": "object"
              "properties":
                "type":
                  "type": "string"
                  "example": "HASHED"
                "id":
                  "type": "integer"
                  "format": "int64"
                  "example": 1
                "priority":
                  "type": "integer"
                  "format": "int64"
                  "example": 400000
                "timeout":
                  "type": "integer"
                  "format": "int64"
                  "example": 0
                "isPermanent":
                  "type": "boolean"
                  "example": true
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "operation":
                  "type": "string"
                  "example": "ADD"
                "meta":
                  "title": "meta"
                  "required":
                    - "criteria"
                  "type": "object"
                  "properties":
                    "criteria":
                      "type": "array"
                      "xml":
                        "name": "criteria"
                        "wrapped": true
                      "items":
                        "title": "criteria"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "description": "Ethernet field name"
                            "example": "ETH_TYPE"
                          "mac":
                            "type": "string"
                            "example": "00:00:11:00:00:01"
                          "ip":
                            "type": "string"
                            "description": "IP source address"
                            "example": "10.1.1.0/24"
                          "tcpPort":
                            "type": "integer"
                            "description": "TCP source address"
                            "format": "uint16"
                            "example": 1
                          "spacingMultiplier":
                            "type": "integer"
                            "description": "Optical channel spacing multiplier"
                            "format": "int64"
                            "example": 4
                          "ochSignalId":
                            "type": "integer"
                            "description": "Optical channel signal ID"
                            "format": "int64"
                            "example": 1
                          "tributarySlotBitmap":
                            "title": "tributarySlotBitmap"
                            "type": "array"
                            "description": "OPU (Optical channel Payload Unit) slot bitmap."
                "treatments":
                  "type": "array"
                  "xml":
                    "name": "treatments"
                    "wrapped": true
                  "items":
                    "title": "treatments"
                    "type": "object"
                    "properties":
                      "instructions":
                        "title": "instructions"
                        "type": "array"
                        "items":
                          "title": "instructions"
                          "required":
                            - "port"
                            - "type"
                          "type": "object"
                          "properties":
                            "type":
                              "type": "string"
                              "example": "OUTPUT"
                            "port":
                              "type": "string"
                              "example": "CONTROLLER"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/flows/table/{tableId}":
    "get":
      "tags":
        - "flows"
      "summary": "Gets all flow entries for a table"
      "description": "Returns array of all flow rules for a table."
      "parameters":
        -
          "name": "tableId"
          "in": "path"
          "description": "table identifier"
          "required": true
          "schema":
            "type": "integer"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flows/application/{appId}":
    "get":
      "tags":
        - "flows"
      "summary": "Gets flow rules generated by an application"
      "description": "Returns the flow rule specified by the application id."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "flows"
      "summary": "Removes flow rules by application ID"
      "description": "Removes a collection of flow rules generated by the given application."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flows":
    "get":
      "tags":
        - "flows"
      "summary": "Gets all flow entries"
      "description": "Returns array of all flow rules in the system."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "flows"
      "summary": "Creates new flow rules"
      "description": "Creates and installs a new flow rules.<br>\nFlow rule criteria and instruction description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rules"
      "parameters":
        -
          "name": "appId"
          "in": "query"
          "description": "application id"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "flow rules JSON"
        "content":
          "application/json":
            "schema":
              "title": "flows"
              "required":
                - "flows"
              "type": "object"
              "properties":
                "flows":
                  "type": "array"
                  "xml":
                    "name": "flows"
                    "wrapped": true
                  "items":
                    "title": "flow"
                    "required":
                      - "deviceId"
                      - "isPermanent"
                      - "priority"
                      - "timeout"
                    "type": "object"
                    "properties":
                      "priority":
                        "type": "integer"
                        "format": "int32"
                        "example": 40000
                      "timeout":
                        "type": "integer"
                        "format": "int32"
                        "example": 0
                      "isPermanent":
                        "type": "boolean"
                        "example": true
                      "deviceId":
                        "type": "string"
                        "example": "of:0000000000000001"
                      "treatment":
                        "title": "treatment"
                        "required":
                          - "instructions"
                        "type": "object"
                        "properties":
                          "instructions":
                            "title": "treatment"
                            "type": "array"
                            "items":
                              "title": "instructions"
                              "required":
                                - "port"
                                - "type"
                              "type": "object"
                              "properties":
                                "type":
                                  "type": "string"
                                  "example": "OUTPUT"
                                "port":
                                  "type": "string"
                                  "example": "CONTROLLER"
                      "selector":
                        "title": "selector"
                        "required":
                          - "criteria"
                        "type": "object"
                        "properties":
                          "criteria":
                            "type": "array"
                            "xml":
                              "name": "criteria"
                              "wrapped": true
                            "items":
                              "title": "criteria"
                              "type": "object"
                              "properties":
                                "type":
                                  "type": "string"
                                  "description": "Ethernet field name"
                                  "example": "ETH_TYPE"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
    "delete":
      "tags":
        - "flows"
      "summary": "Removes a batch of flow rules"
      "requestBody":
        "description": "stream for posted JSON"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/flows/{deviceId}/{flowId}":
    "get":
      "tags":
        - "flows"
      "summary": "Gets flow rules"
      "description": "Returns the flow entry specified by the device id and\nflow rule id."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "flowId"
          "in": "path"
          "description": "flow rule identifier"
          "required": true
          "schema":
            "type": "number"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "flows"
      "summary": "Removes flow rule"
      "description": "Removes the specified flow rule."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "flowId"
          "in": "path"
          "description": "flow rule identifier"
          "required": true
          "schema":
            "type": "number"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flows/pending":
    "get":
      "tags":
        - "flows"
      "summary": "Gets all pending flow entries"
      "description": "Returns array of all pending flow rules in the system."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/flows/{deviceId}":
    "get":
      "tags":
        - "flows"
      "summary": "Gets flow entries of a device"
      "description": "Returns array of all flow rules for the\nspecified device."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "flows"
      "summary": "Creates new flow rule"
      "description": "Creates and installs a new flow rule for the\nspecified device. <br>\nFlow rule criteria and instruction description:\nhttps://wiki.onosproject.org/display/ONOS/Flow+Rules"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "appId"
          "in": "query"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "flow rule JSON"
        "content":
          "application/json":
            "schema":
              "title": "flow"
              "required":
                - "deviceId"
                - "isPermanent"
                - "priority"
                - "timeout"
              "type": "object"
              "properties":
                "priority":
                  "type": "integer"
                  "format": "int32"
                  "example": 40000
                "timeout":
                  "type": "integer"
                  "format": "int32"
                  "example": 0
                "isPermanent":
                  "type": "boolean"
                  "example": true
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "treatment":
                  "title": "treatment"
                  "required":
                    - "instructions"
                  "type": "object"
                  "properties":
                    "instructions":
                      "title": "treatment"
                      "type": "array"
                      "items":
                        "title": "instructions"
                        "required":
                          - "port"
                          - "type"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "example": "OUTPUT"
                          "port":
                            "type": "string"
                            "example": "CONTROLLER"
                "selector":
                  "title": "selector"
                  "required":
                    - "criteria"
                  "type": "object"
                  "properties":
                    "criteria":
                      "type": "array"
                      "xml":
                        "name": "criteria"
                        "wrapped": true
                      "items":
                        "title": "criteria"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "description": "Ethernet field name"
                            "example": "ETH_TYPE"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/groups":
    "get":
      "tags":
        - "groups"
      "summary": "Returns all groups of all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/groups/{deviceId}":
    "get":
      "tags":
        - "groups"
      "summary": "Returns all groups associated with the given device"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "groups"
      "summary": "Create new group rule"
      "description": "Creates and installs a new group rule for the\nspecified device."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "group rule JSON"
        "content":
          "application/json":
            "schema":
              "title": "group"
              "required":
                - "appCookie"
                - "buckets"
                - "groupId"
                - "type"
              "type": "object"
              "properties":
                "type":
                  "type": "string"
                  "example": "ALL"
                "appCookie":
                  "type": "string"
                  "description": "application cookie. Arbitrary length byte array represented in hex string"
                  "example": "0x1234abcd"
                "groupId":
                  "type": "string"
                  "example": "1"
                "buckets":
                  "type": "array"
                  "xml":
                    "name": "buckets"
                    "wrapped": true
                  "items":
                    "title": "buckets"
                    "required":
                      - "treatment"
                    "type": "object"
                    "properties":
                      "treatment":
                        "title": "treatment"
                        "required":
                          - "instructions"
                        "type": "object"
                        "properties":
                          "instructions":
                            "title": "treatment"
                            "type": "array"
                            "items":
                              "title": "instructions"
                              "required":
                                - "port"
                                - "type"
                              "type": "object"
                              "properties":
                                "type":
                                  "type": "string"
                                  "example": "OUTPUT"
                                "port":
                                  "type": "string"
                                  "example": "2"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/groups/{deviceId}/{appCookie}/buckets":
    "post":
      "tags":
        - "groups"
      "summary": "Adds buckets to an existing group"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "appCookie"
          "in": "path"
          "description": "application cookie"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "buckets JSON"
        "content":
          "application/json":
            "schema":
              "title": "buckets"
              "required":
                - "buckets"
              "type": "object"
              "properties":
                "buckets":
                  "type": "array"
                  "xml":
                    "name": "buckets"
                    "wrapped": true
                  "items":
                    "title": "buckets"
                    "required":
                      - "treatment"
                    "type": "object"
                    "properties":
                      "treatment":
                        "title": "treatment"
                        "required":
                          - "instructions"
                        "type": "object"
                        "properties":
                          "instructions":
                            "title": "treatment"
                            "type": "array"
                            "items":
                              "title": "instructions"
                              "required":
                                - "port"
                                - "type"
                              "type": "object"
                              "properties":
                                "type":
                                  "type": "string"
                                  "example": "OUTPUT"
                                "port":
                                  "type": "string"
                                  "example": "2"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/groups/{deviceId}/{appCookie}/buckets/{bucketIds}":
    "delete":
      "tags":
        - "groups"
      "summary": "Removes buckets from an existing group"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "appCookie"
          "in": "path"
          "description": "application cookie"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "bucketIds"
          "in": "path"
          "description": "comma separated list of identifiers of buckets to remove from this group"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/groups/{deviceId}/{appCookie}":
    "get":
      "tags":
        - "groups"
      "summary": "Returns a group with the given deviceId and appCookie"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "appCookie"
          "in": "path"
          "description": "group key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "groups"
      "summary": "Removes the specified group"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "appCookie"
          "in": "path"
          "description": "application cookie to be used for lookup"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/hosts/{mac}/{vlan}":
    "get":
      "tags":
        - "hosts"
      "summary": "Get details of end-station host with MAC/VLAN"
      "description": "Returns detailed properties of the specified end-station host."
      "parameters":
        -
          "name": "mac"
          "in": "path"
          "description": "host MAC address"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "vlan"
          "in": "path"
          "description": "host VLAN identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "hosts"
      "summary": "Removes infrastructure device"
      "description": "Administratively deletes the specified device from the inventory of\nknown devices."
      "parameters":
        -
          "name": "mac"
          "in": "path"
          "description": "host MAC address"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "vlan"
          "in": "path"
          "description": "host VLAN identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/hosts/{id}":
    "get":
      "tags":
        - "hosts"
      "summary": "Get details of end-station host"
      "description": "Returns detailed properties of the specified end-station host."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "host identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/hosts":
    "get":
      "tags":
        - "hosts"
      "summary": "Get all end-station hosts"
      "description": "Returns array of all known end-station hosts."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "hosts"
      "summary": "Creates a new host based on JSON input and adds it to the current\nhost inventory"
      "requestBody":
        "description": "input JSON"
        "content":
          "application/json":
            "schema":
              "title": "host"
              "required":
                - "ipAddresses"
                - "mac"
                - "vlan"
              "type": "object"
              "properties":
                "mac":
                  "type": "string"
                  "example": "46:E4:3C:A4:17:C8"
                "vlan":
                  "type": "string"
                  "example": "-1"
                "ipAddresses":
                  "type": "array"
                  "xml":
                    "name": "hosts"
                    "wrapped": true
                  "items":
                    "type": "string"
                    "example": "127.0.0.1"
                "locations":
                  "type": "array"
                  "items":
                    "title": "location"
                    "required":
                      - "elementId"
                      - "port"
                    "type": "object"
                    "properties":
                      "elementId":
                        "type": "string"
                        "example": "of:0000000000000002"
                      "port":
                        "type": "string"
                        "example": "3"
                "auxLocations":
                  "type": "array"
                  "items":
                    "title": "location"
                    "required":
                      - "elementId"
                      - "port"
                    "type": "object"
                    "properties":
                      "elementId":
                        "type": "string"
                        "example": "of:0000000000000003"
                      "port":
                        "type": "string"
                        "example": "4"
                "innerVlan":
                  "type": "string"
                  "example": "10"
                "outerTpid":
                  "type": "string"
                  "example": "0x88a8"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/intents/relatedflows/{appId}/{key}":
    "get":
      "tags":
        - "intents"
      "summary": "Gets all related flow entries created by a particular intent"
      "description": "Returns all flow entries of the specified intent."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "key"
          "in": "path"
          "description": "intent key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/intents":
    "get":
      "tags":
        - "intents"
      "summary": "Gets all intents"
      "description": "Returns array containing all the intents in the system."
      "parameters":
        -
          "name": "detail"
          "in": "query"
          "description": "flag to return full details of intents in list."
          "required": true
          "schema":
            "type": "boolean"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "intents"
      "summary": "Submits a new intent"
      "description": "Creates and submits intent from the JSON request."
      "requestBody":
        "description": "input JSON"
        "content":
          "application/json":
            "schema":
              "title": "host"
              "required":
                - "appId"
                - "one"
                - "priority"
                - "two"
                - "type"
              "type": "object"
              "properties":
                "type":
                  "type": "string"
                  "example": "HostToHostIntent"
                "appId":
                  "type": "string"
                  "example": "org.onosproject.ovsdb"
                "priority":
                  "type": "integer"
                  "format": "int64"
                  "example": 55
                "one":
                  "type": "string"
                  "example": "46:E4:3C:A4:17:C8/-1"
                "two":
                  "type": "string"
                  "example": "08:00:27:56:8a:15/-1"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/intents/application/{appId}":
    "get":
      "tags":
        - "intents"
      "summary": "Gets intents by application"
      "description": "Returns the intents specified by the application id."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "detail"
          "in": "query"
          "description": "flag to return full details of intents in list."
          "required": true
          "schema":
            "type": "boolean"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/intents/installables/{appId}/{key}":
    "get":
      "tags":
        - "intents"
      "summary": "Gets intent installables by application ID and key"
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "key"
          "in": "path"
          "description": "intent key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/intents/{appId}/{key}":
    "get":
      "tags":
        - "intents"
      "summary": "Gets intent by application and key"
      "description": "Returns details of the specified intent."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "key"
          "in": "path"
          "description": "intent key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "intents"
      "summary": "Withdraws intent"
      "description": "Withdraws the specified intent from the system."
      "parameters":
        -
          "name": "appId"
          "in": "path"
          "description": "application identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "key"
          "in": "path"
          "description": "intent key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/intents/minisummary":
    "get":
      "tags":
        - "intents"
      "summary": "Gets Summary of all intents"
      "description": "Returns Summary of the intents in the system."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/links/{usestalelinkage}":
    "get":
      "tags":
        - "links"
      "summary": "Get useStaleLinkAge active status"
      "description": "Returns current status of the VanishedStaleLink."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "links"
      "summary": "Set useStaleLinkAge status"
      "requestBody":
        "description": "input JSON"
        "content":
          "application/json":
            "schema":
              "required":
                - "active"
              "type": "object"
              "properties":
                "active":
                  "type": "boolean"
                  "example": true
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/links":
    "get":
      "tags":
        - "links"
      "summary": "Gets infrastructure links"
      "description": "Returns array of all links, or links for the specified device or port."
      "parameters":
        -
          "name": "device"
          "in": "query"
          "description": "(optional) device identifier"
          "schema":
            "type": "string"
        -
          "name": "port"
          "in": "query"
          "description": "(optional) port number"
          "schema":
            "type": "string"
        -
          "name": "direction"
          "in": "query"
          "description": "(optional) direction qualifier"
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership/{deviceId}/role":
    "get":
      "tags":
        - "mastership"
      "summary": "Returns controllers connected to a given device, in order of\npreference"
      "description": "The first entry in the list is the current master."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership":
    "get":
      "tags":
        - "mastership"
      "summary": "Balances the mastership to be shared as evenly as possibly by all\nonline instances"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "put":
      "tags":
        - "mastership"
      "summary": "Applies the current mastership role for the specified device"
      "requestBody":
        "description": "JSON representation of device, node, mastership info"
        "content":
          "application/json":
            "schema":
              "title": "mastership"
              "required":
                - "deviceId"
                - "nodeId"
                - "role"
              "type": "object"
              "properties":
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "nodeId":
                  "type": "string"
                  "example": "1"
                "role":
                  "type": "string"
                  "example": "MASTER"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/mastership/{deviceId}/request":
    "get":
      "tags":
        - "mastership"
      "summary": "Returns the mastership status of the local controller for a given\ndevice forcing master selection if necessary"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership/{deviceId}/master":
    "get":
      "tags":
        - "mastership"
      "summary": "Returns the current master for a given device"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership/{nodeId}/device":
    "get":
      "tags":
        - "mastership"
      "summary": "Returns the devices for which a controller is master"
      "parameters":
        -
          "name": "nodeId"
          "in": "path"
          "description": "controller identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership/{deviceId}/relinquish":
    "get":
      "tags":
        - "mastership"
      "summary": "Abandons mastership of the specified device on the local node thus\nforcing selection of a new master"
      "description": "If the local node is not a master\nfor this device, no master selection will occur."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/mastership/{deviceId}/local":
    "get":
      "tags":
        - "mastership"
      "summary": "Returns the role of the local node for the specified device"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/meters":
    "get":
      "tags":
        - "meters"
      "summary": "Returns all meters of all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/meters/{deviceId}/{meterId}":
    "get":
      "tags":
        - "meters"
      "summary": "Returns a meter by the meter id"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "meterId"
          "in": "path"
          "description": "meter identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "meters"
      "summary": "Removes the meter by device id and meter id"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "meterId"
          "in": "path"
          "description": "meter identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/meters/{deviceId}":
    "get":
      "tags":
        - "meters"
      "summary": "Returns a collection of meters by the device id"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "meters"
      "summary": "Creates new meter rule"
      "description": "Creates and installs a new meter rule for the\nspecified device."
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "meter rule JSON"
        "content":
          "application/json":
            "schema":
              "title": "meter"
              "required":
                - "bands"
                - "burst"
                - "deviceId"
                - "unit"
              "type": "object"
              "properties":
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000001"
                "unit":
                  "type": "string"
                  "example": "KB_PER_SEC"
                "burst":
                  "type": "boolean"
                  "example": true
                "bands":
                  "type": "array"
                  "xml":
                    "name": "bands"
                    "wrapped": true
                  "items":
                    "title": "bands"
                    "required":
                      - "burstSize"
                      - "prec"
                      - "rate"
                      - "type"
                    "type": "object"
                    "properties":
                      "type":
                        "type": "string"
                        "example": "REMARK"
                      "rate":
                        "type": "integer"
                        "format": "int64"
                        "example": 0
                      "burstSize":
                        "type": "integer"
                        "format": "int64"
                        "example": 0
                      "prec":
                        "type": "integer"
                        "format": "int16"
                        "example": 0
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/meters/{deviceId}/{scope}/{index}":
    "get":
      "tags":
        - "meters"
      "summary": "Returns a meter by the meter cell id"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "scope"
          "in": "path"
          "description": "scope identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "index"
          "in": "path"
          "description": "index"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "delete":
      "tags":
        - "meters"
      "summary": "Removes the meter by the device id and meter cell id"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "scope"
          "in": "path"
          "description": "scope identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "index"
          "in": "path"
          "description": "index"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/meters/scope/{deviceId}/{scope}":
    "get":
      "tags":
        - "meters"
      "summary": "Returns a collection of meters by the device id and meter scope"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "scope"
          "in": "path"
          "description": "scope identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/metrics/{metricName}":
    "get":
      "tags":
        - "metrics"
      "summary": "Gets stats information of a metric"
      "description": "Returns array of all information for the\nspecified metric."
      "parameters":
        -
          "name": "metricName"
          "in": "path"
          "description": "metric name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/metrics":
    "get":
      "tags":
        - "metrics"
      "summary": "Gets stats information of all metrics"
      "description": "Returns array of all information for\nall metrics."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/modulation/set-modulation/{id}":
    "put":
      "tags":
        - "modulation"
      "summary": "Sets the modulation for specified device and port"
      "description": "Returns the details of the specified modulation config device ports.\n<p>\nModulationConfigDeviceGetPorts"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "port_id"
          "in": "query"
          "description": "port channel"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "direction"
          "in": "query"
          "description": "port direction(transmitter or receiver port)"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "bitrate"
          "in": "query"
          "description": "port bitrate"
          "required": true
          "schema":
            "type": "number"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/modulation/{id}/port":
    "get":
      "tags":
        - "modulation"
      "summary": "Returns the supported modulation scheme for specified ports of device"
      "description": "<p>\nModulationConfigDeviceGetPorts"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "line port identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "port_id"
          "in": "query"
          "description": "line port identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/modulation/{id}":
    "get":
      "tags":
        - "modulation"
      "summary": "Gets the details of a modulation config device"
      "description": "Returns the details of the specified modulation config device."
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "device identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/modulation":
    "get":
      "tags":
        - "modulation"
      "summary": "Gets all modulation config devices"
      "description": "Returns array of all discovered modulation config devices."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "put":
      "tags":
        - "modulation"
      "summary": "Applies the target modulation for the specified device"
      "requestBody":
        "description": "JSON representation of device, port, component and target\nbitrate info"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/mcast":
    "get":
      "tags":
        - "mcast"
      "summary": "Get all multicast routes"
      "description": "Returns array of all known multicast routes."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "mcast"
      "summary": "Create new multicast route"
      "description": "Creates a new route in the multicast RIB."
      "requestBody":
        "description": "multicast route JSON"
        "content":
          "application/json":
            "schema":
              "title": "route"
              "required":
                - "group"
                - "source"
              "type": "object"
              "properties":
                "source":
                  "type": "string"
                  "description": "Multicast source IP address"
                  "example": "10.1.1.0"
                "group":
                  "type": "string"
                  "description": "Multicast group IP address"
                  "example": "10.1.1.0"
                "ingress":
                  "type": "string"
                  "description": "Multicast ingress Connection Point device and port"
                  "example": "of:0000000000000001/1"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
    "delete":
      "tags":
        - "mcast"
      "summary": "Remove a multicast route"
      "description": "Removes a route from the multicast RIB."
      "requestBody":
        "description": "multicast route JSON"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/mcast/sinks/{group}/{source}":
    "post":
      "tags":
        - "mcast"
      "summary": "Create a sink for a multicast route"
      "description": "Creates a new sink for an existing multicast route."
      "parameters":
        -
          "name": "group"
          "in": "path"
          "description": "group IP address"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "source"
          "in": "path"
          "description": "source IP address"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "sink JSON"
        "content":
          "application/json":
            "schema":
              "title": "sinks"
              "required":
                - "sinks"
              "type": "object"
              "properties":
                "sinks":
                  "type": "array"
                  "xml":
                    "name": "sinks"
                    "wrapped": true
                  "items":
                    "title": "sink"
                    "type": "string"
                    "example": "of:0000000000000001/1"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/network/configuration":
    "get":
      "tags":
        - "network/configuration"
      "summary": "Gets entire network configuration base"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "network/configuration"
      "summary": "Uploads bulk network configuration"
      "requestBody":
        "description": "network configuration JSON rooted at the top node"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "network/configuration"
      "summary": "Clear entire network configuration base"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/network/configuration/{subjectClassKey}":
    "get":
      "tags":
        - "network/configuration"
      "summary": "Gets all network configuration for a subject class"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subject class key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "network/configuration"
      "summary": "Upload multiple network configurations for a subject class"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subject class key"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "network configuration JSON rooted at the top node"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "network/configuration"
      "summary": "Clear all network configurations for a subject class"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subject class key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/network/configuration/{subjectClassKey}/{subjectKey}/{configKey}":
    "get":
      "tags":
        - "network/configuration"
      "summary": "Gets specific network configuration for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "configKey"
          "in": "path"
          "description": "configuration class key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "network/configuration"
      "summary": "Upload specific network configuration for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "configKey"
          "in": "path"
          "description": "configuration class key"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "network configuration JSON rooted at the top node"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "network/configuration"
      "summary": "Clear specific network configuration for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "configKey"
          "in": "path"
          "description": "configuration class key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/network/configuration/{subjectClassKey}/{subjectKey}":
    "get":
      "tags":
        - "network/configuration"
      "summary": "Gets all network configuration for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "network/configuration"
      "summary": "Upload mutliple network configurations for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "network configuration JSON rooted at the top node"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "network/configuration"
      "summary": "Clear all network configurations for a subjectKey"
      "parameters":
        -
          "name": "subjectClassKey"
          "in": "path"
          "description": "subjectKey class key"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "subjectKey"
          "in": "path"
          "description": "subjectKey key"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/packet/processors":
    "get":
      "tags":
        - "packet/processors"
      "summary": "Gets packet processors"
      "description": "Returns array of all packet processors."
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/paths/{src}/{dst}/disjoint":
    "get":
      "tags":
        - "paths"
      "summary": "Gets all shortest disjoint path pairs between any two hosts or devices"
      "description": "Returns array of all shortest disjoint path pairs between any two elements."
      "parameters":
        -
          "name": "src"
          "in": "path"
          "description": "source identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "dst"
          "in": "path"
          "description": "destination identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/paths/{src}/{dst}":
    "get":
      "tags":
        - "paths"
      "summary": "Gets all shortest paths between any two hosts or devices"
      "description": "Returns array of all shortest paths between any two elements."
      "parameters":
        -
          "name": "src"
          "in": "path"
          "description": "source identifier"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "dst"
          "in": "path"
          "description": "destination identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/regions":
    "get":
      "tags":
        - "regions"
      "summary": "Returns set of all regions"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "regions"
      "summary": "Creates a new region using the supplied JSON input stream"
      "requestBody":
        "description": "region JSON stream"
        "content":
          "application/json":
            "schema":
              "title": "region"
              "required":
                - "id"
                - "masters"
                - "name"
                - "type"
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                  "example": "1"
                "name":
                  "type": "string"
                  "example": "region"
                "type":
                  "type": "string"
                  "example": "ROOM"
                "masters":
                  "type": "array"
                  "xml":
                    "name": "masters"
                    "wrapped": true
                  "items":
                    "type": "array"
                    "xml":
                      "name": "masters"
                      "wrapped": true
                    "items":
                      "type": "string"
                      "example": "1"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/regions/{regionId}":
    "get":
      "tags":
        - "regions"
      "summary": "Returns the region with the specified identifier"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "put":
      "tags":
        - "regions"
      "summary": "Updates the specified region using the supplied JSON input stream"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "region JSON stream"
        "content":
          "application/json":
            "schema":
              "title": "region"
              "required":
                - "id"
                - "masters"
                - "name"
                - "type"
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                  "example": "1"
                "name":
                  "type": "string"
                  "example": "region"
                "type":
                  "type": "string"
                  "example": "ROOM"
                "masters":
                  "type": "array"
                  "xml":
                    "name": "masters"
                    "wrapped": true
                  "items":
                    "type": "array"
                    "xml":
                      "name": "masters"
                      "wrapped": true
                    "items":
                      "type": "string"
                      "example": "1"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
    "delete":
      "tags":
        - "regions"
      "summary": "Removes the specified region using the given region identifier"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/regions/{regionId}/devices":
    "get":
      "tags":
        - "regions"
      "summary": "Returns the set of devices that belong to the specified region"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "post":
      "tags":
        - "regions"
      "summary": "Adds the specified collection of devices to the region"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "deviceIds JSON stream"
        "content":
          "application/json":
            "schema":
              "title": "deviceIds"
              "required":
                - "deviceIds"
              "type": "object"
              "properties":
                "deviceIds":
                  "type": "array"
                  "xml":
                    "name": "deviceIds"
                    "wrapped": true
                  "items":
                    "type": "string"
                    "example": "of:0000000000000001"
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
    "delete":
      "tags":
        - "regions"
      "summary": "Removes the specified collection of devices from the region"
      "parameters":
        -
          "name": "regionId"
          "in": "path"
          "description": "region identifier"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "deviceIds JSON stream"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "stream"
  "/statistics/ports/{deviceId}":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port statistics of a specified devices"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device ID"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/flows/activeentries":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets sum of active entries in all tables for all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/delta/ports/{deviceId}/{port}":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port delta statistics of a specified device and port"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device ID"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "port"
          "in": "path"
          "description": "port"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/ports":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port statistics of all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/delta/ports/{deviceId}":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port delta statistics of a specified devices"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device ID"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/ports/{deviceId}/{port}":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port statistics of a specified device and port"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device ID"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "port"
          "in": "path"
          "description": "port"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/flows/tables/{deviceId}":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets table statistics for all tables of a specified device"
      "parameters":
        -
          "name": "deviceId"
          "in": "path"
          "description": "device ID"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/delta/ports":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets port delta statistics of all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/flows/link":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets load statistics for all links or for a specific link"
      "parameters":
        -
          "name": "device"
          "in": "query"
          "description": "(optional) device ID for a specific link"
          "schema":
            "type": "string"
        -
          "name": "port"
          "in": "query"
          "description": "(optional) port number for a specified link"
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/statistics/flows/tables":
    "get":
      "tags":
        - "statistics"
      "summary": "Gets table statistics for all tables of all devices"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/system":
    "get":
      "tags":
        - "system"
      "summary": "Get high-level system information, version, basic sumaries, memory usage, etc"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/clusters":
    "get":
      "tags":
        - "topology"
      "summary": "Gets overview of topology SCCs"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/clusters/{id}/devices":
    "get":
      "tags":
        - "topology"
      "summary": "Gets devices in a specific SCC"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "id of the cluster to query"
          "required": true
          "schema":
            "type": "integer"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology":
    "get":
      "tags":
        - "topology"
      "summary": "Gets overview of current topology"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/clusters/{id}/links":
    "get":
      "tags":
        - "topology"
      "summary": "Gets links in specific SCC"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "id of the cluster to query"
          "required": true
          "schema":
            "type": "integer"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/infrastructure/{connectPoint}":
    "get":
      "tags":
        - "topology"
      "summary": "Tests if a connect point is infrastructure or edge"
      "parameters":
        -
          "name": "connectPoint"
          "in": "path"
          "description": "deviceid:portnumber"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/broadcast/{connectPoint}":
    "get":
      "tags":
        - "topology"
      "summary": "Tests if a connect point is in broadcast set"
      "parameters":
        -
          "name": "connectPoint"
          "in": "path"
          "description": "deviceid:portnumber"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/topology/clusters/{id}":
    "get":
      "tags":
        - "topology"
      "summary": "Gets details of a specific SCC"
      "parameters":
        -
          "name": "id"
          "in": "path"
          "description": "id of the cluster to query"
          "required": true
          "schema":
            "type": "integer"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/ui/preferences":
    "get":
      "tags":
        - "ui/preferences"
      "summary": "Gets all user preferences"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/ui/preferences/{user}":
    "get":
      "tags":
        - "ui/preferences"
      "summary": "Gets user preferences for the given user"
      "parameters":
        -
          "name": "user"
          "in": "path"
          "description": "user name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
  "/ui/preferences/{user}/{pref}":
    "get":
      "tags":
        - "ui/preferences"
      "summary": "Gets the specified user preferences for the given user"
      "parameters":
        -
          "name": "user"
          "in": "path"
          "description": "user name"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "pref"
          "in": "path"
          "description": "preferences name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
    "put":
      "tags":
        - "ui/preferences"
      "summary": "Gets the specified user preferences for the given user"
      "parameters":
        -
          "name": "user"
          "in": "path"
          "description": "user name"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "pref"
          "in": "path"
          "description": "preferences JSON"
          "required": true
          "schema":
            "type": "string"
      "requestBody":
        "description": "preferences JSON"
        "content":
          "application/json": {}
        "required": true
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
      "x-codegen-request-body-name": "request"
    "delete":
      "tags":
        - "ui/preferences"
      "summary": "Removes the specified user preferences for the given user"
      "parameters":
        -
          "name": "user"
          "in": "path"
          "description": "user name"
          "required": true
          "schema":
            "type": "string"
        -
          "name": "pref"
          "in": "path"
          "description": "preferences name"
          "required": true
          "schema":
            "type": "string"
      "responses":
        "default":
          "description": "Unexpected error"
          "content": {}
        "200":
          "description": "successful operation"
          "content": {}
"components":
  "schemas":
    "Applications":
      "title": "applications"
      "required":
        - "applications"
      "type": "object"
      "properties":
        "applications":
          "type": "array"
          "xml":
            "name": "applications"
            "wrapped": true
          "items":
            "title": "application"
            "required":
              - "category"
              - "description"
              - "features"
              - "featuresRepo"
              - "id"
              - "name"
              - "origin"
              - "permissions"
              - "readme"
              - "requiredApps"
              - "state"
              - "url"
              - "version"
            "type": "object"
            "properties":
              "name":
                "type": "string"
                "example": "org.onosproject.distributedprimitives"
              "id":
                "type": "integer"
                "format": "int64"
                "example": 1
              "version":
                "type": "string"
                "example": "1.2.3"
              "category":
                "type": "string"
                "example": "default"
              "description":
                "type": "string"
                "example": "ONOS app to test distributed primitives"
              "readme":
                "type": "string"
                "example": "ONOS app to test distributed primitives."
              "origin":
                "type": "string"
                "example": "Open Networking Foundation"
              "url":
                "type": "string"
                "example": "http://onosproject.org"
              "permissions":
                "type": "array"
                "xml":
                  "name": "permissions"
                  "wrapped": true
                "items":
                  "type": "string"
                  "example": ""
              "featuresRepo":
                "type": "string"
                "example": "mvn:org.onosproject/onos-app-cip/1.2.3/xml/features"
              "features":
                "type": "array"
                "xml":
                  "name": "features"
                  "wrapped": true
                "items":
                  "type": "string"
                  "example": "onos-app-distributed-primitives"
              "requiredApps":
                "type": "array"
                "xml":
                  "name": "requiredApps"
                  "wrapped": true
                "items":
                  "type": "string"
                  "example": ""
              "state":
                "type": "string"
                "example": "ACTIVE"
    "Application":
      "title": "application"
      "required":
        - "category"
        - "description"
        - "features"
        - "featuresRepo"
        - "id"
        - "name"
        - "origin"
        - "permissions"
        - "readme"
        - "requiredApps"
        - "state"
        - "url"
        - "version"
      "type": "object"
      "properties":
        "name":
          "type": "string"
          "example": "org.onosproject.distributedprimitives"
        "id":
          "type": "integer"
          "format": "int64"
          "example": 1
        "version":
          "type": "string"
          "example": "1.2.3"
        "category":
          "type": "string"
          "example": "default"
        "description":
          "type": "string"
          "example": "ONOS app to test distributed primitives"
        "readme":
          "type": "string"
          "example": "ONOS app to test distributed primitives."
        "origin":
          "type": "string"
          "example": "Open Networking Foundation"
        "url":
          "type": "string"
          "example": "http://onosproject.org"
        "permissions":
          "type": "array"
          "xml":
            "name": "permissions"
            "wrapped": true
          "items":
            "type": "string"
            "example": ""
        "featuresRepo":
          "type": "string"
          "example": "mvn:org.onosproject/onos-app-cip/1.2.3/xml/features"
        "features":
          "type": "array"
          "xml":
            "name": "features"
            "wrapped": true
          "items":
            "type": "string"
            "example": "onos-app-distributed-primitives"
        "requiredApps":
          "type": "array"
          "xml":
            "name": "requiredApps"
            "wrapped": true
          "items":
            "type": "string"
            "example": ""
        "state":
          "type": "string"
          "example": "ACTIVE"
    "ApplicationId":
      "title": "applicationId"
      "required":
        - "id"
        - "name"
      "type": "object"
      "properties":
        "name":
          "type": "string"
          "example": "org.onosproject.distributedprimitives"
        "id":
          "type": "integer"
          "format": "int64"
          "example": 1
    "ApplicationIds":
      "title": "applicationIds"
      "required":
        - "applicationIds"
      "type": "object"
      "properties":
        "applicationIds":
          "type": "array"
          "xml":
            "name": "applicationIds"
            "wrapped": true
          "items":
            "title": "applicationId"
            "required":
              - "id"
              - "name"
            "type": "object"
            "properties":
              "name":
                "type": "string"
                "example": "org.onosproject.distributedprimitives"
              "id":
                "type": "integer"
                "format": "int64"
                "example": 1
    "Cluster":
      "title": "cluster"
      "required":
        - "nodes"
      "type": "object"
      "properties":
        "nodes":
          "type": "array"
          "xml":
            "name": "nodes"
            "wrapped": true
          "items":
            "title": "nodes"
            "required":
              - "id"
              - "ip"
              - "status"
              - "tcpPort"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "127.0.0.1"
              "ip":
                "type": "string"
                "example": "127.0.0.1"
              "tcpPort":
                "type": "integer"
                "format": "int64"
                "example": 9876
              "status":
                "type": "string"
                "example": "ACTIVE"
    "ClusterNode":
      "required":
        - "id"
        - "ip"
        - "status"
        - "tcpPort"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "127.0.0.1"
        "ip":
          "type": "string"
          "example": "127.0.0.1"
        "tcpPort":
          "type": "integer"
          "format": "int64"
          "example": 9876
        "status":
          "type": "string"
          "example": "ACTIVE"
    "Devicekeys":
      "title": "Devicekeys"
      "required":
        - "keys"
      "type": "object"
      "properties":
        "keys":
          "type": "array"
          "xml":
            "name": "keys"
            "wrapped": true
          "items":
            "title": "key"
            "type": "object"
            "properties": {}
    "Devicekey":
      "title": "Devicekey"
      "type": "object"
    "DevicesGet":
      "title": "nodes"
      "required":
        - "devices"
      "type": "object"
      "properties":
        "devices":
          "type": "array"
          "xml":
            "name": "device"
            "wrapped": true
          "items":
            "title": "device"
            "required":
              - "annotations"
              - "available"
              - "chassisId"
              - "driver"
              - "hw"
              - "id"
              - "mfr"
              - "role"
              - "serial"
              - "sw"
              - "type"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "of:0000000000000001"
              "type":
                "type": "string"
                "example": "SWITCH"
              "available":
                "type": "boolean"
                "example": true
              "role":
                "type": "string"
                "example": "of:0000000000000001"
              "mfr":
                "type": "string"
                "example": "Nicira, Inc."
              "hw":
                "type": "string"
                "example": "Open vSwitch"
              "sw":
                "type": "string"
                "example": "2.3.1"
              "serial":
                "type": "string"
                "example": "123"
              "driver":
                "type": "string"
                "example": "ovs"
              "chassisId":
                "type": "string"
                "example": "1"
              "annotations":
                "title": "annotations"
                "required":
                  - "channelId"
                  - "managementAddress"
                  - "protocol"
                "type": "object"
                "properties":
                  "managementAddress":
                    "type": "string"
                    "example": "123"
                  "protocol":
                    "type": "string"
                    "example": "OF_13"
                  "channelId":
                    "type": "string"
                    "example": "10.128.12.4:34689"
    "DeviceGet":
      "title": "device"
      "required":
        - "annotations"
        - "available"
        - "chassisId"
        - "driver"
        - "hw"
        - "id"
        - "mfr"
        - "role"
        - "serial"
        - "sw"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "of:0000000000000001"
        "type":
          "type": "string"
          "example": "SWITCH"
        "available":
          "type": "boolean"
          "example": true
        "role":
          "type": "string"
          "example": "of:0000000000000001"
        "mfr":
          "type": "string"
          "example": "Nicira, Inc."
        "hw":
          "type": "string"
          "example": "Open vSwitch"
        "sw":
          "type": "string"
          "example": "2.3.1"
        "serial":
          "type": "string"
          "example": "123"
        "driver":
          "type": "string"
          "example": "ovs"
        "chassisId":
          "type": "string"
          "example": "1"
        "annotations":
          "title": "annotations"
          "required":
            - "channelId"
            - "managementAddress"
            - "protocol"
          "type": "object"
          "properties":
            "managementAddress":
              "type": "string"
              "example": "123"
            "protocol":
              "type": "string"
              "example": "OF_13"
            "driver":
              "type": "string"
              "example": "ovs"
            "channelId":
              "type": "string"
              "example": "10.128.12.4:34689"
    "DevicesGetPorts":
      "title": "device"
      "required":
        - "ports"
      "type": "object"
      "properties":
        "ports":
          "type": "array"
          "xml":
            "name": "ports"
            "wrapped": true
          "items":
            "title": "port"
            "required":
              - "annotations"
              - "element"
              - "isEnabled"
              - "port"
              - "portSpeed"
              - "type"
            "type": "object"
            "properties":
              "element":
                "type": "string"
                "example": "of:0000000000000001"
              "port":
                "type": "string"
                "example": "2"
              "isEnabled":
                "type": "boolean"
                "example": true
              "type":
                "type": "string"
                "example": "copper"
              "portSpeed":
                "type": "integer"
                "format": "int64"
                "example": 0
              "annotations":
                "title": "annotations"
                "required":
                  - "portName"
                "type": "object"
                "properties":
                  "portName":
                    "type": "string"
                    "example": "s1"
    "DeviceGetPorts":
      "title": "device"
      "required":
        - "annotations"
        - "available"
        - "chassisId"
        - "driver"
        - "hw"
        - "id"
        - "mfr"
        - "role"
        - "serial"
        - "sw"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "of:0000000000000001"
        "type":
          "type": "string"
          "example": "SWITCH"
        "available":
          "type": "boolean"
          "example": true
        "role":
          "type": "string"
          "example": "of:0000000000000001"
        "mfr":
          "type": "string"
          "example": "Nicira, Inc."
        "hw":
          "type": "string"
          "example": "Open vSwitch"
        "sw":
          "type": "string"
          "example": "2.3.1"
        "serial":
          "type": "string"
          "example": "123"
        "driver":
          "type": "string"
          "example": "ovs"
        "chassisId":
          "type": "string"
          "example": "1"
        "annotations":
          "title": "annotations"
          "required":
            - "channelId"
            - "managementAddress"
            - "protocol"
          "type": "object"
          "properties":
            "managementAddress":
              "type": "string"
              "example": "123"
            "protocol":
              "type": "string"
              "example": "OF_13"
            "channelId":
              "type": "string"
              "example": "10.128.12.4:34689"
        "ports":
          "type": "array"
          "xml":
            "name": "port"
            "wrapped": true
          "items":
            "title": "port"
            "required":
              - "annotations"
              - "element"
              - "isEnabled"
              - "port"
              - "portSpeed"
              - "type"
            "type": "object"
            "properties":
              "element":
                "type": "string"
                "example": "of:0000000000000001"
              "port":
                "type": "string"
                "example": "2"
              "isEnabled":
                "type": "boolean"
                "example": true
              "type":
                "type": "string"
                "example": "copper"
              "portSpeed":
                "type": "integer"
                "format": "int64"
                "example": 0
              "annotations":
                "title": "annotations"
                "required":
                  - "portName"
                "type": "object"
                "properties":
                  "portName":
                    "type": "string"
                    "example": "s1"
    "PortAdministrativeState":
      "required":
        - "enabled"
      "type": "object"
      "properties":
        "enabled":
          "type": "boolean"
          "example": true
    "NextObjectives":
      "title": "obj-next-ids"
      "type": "object"
      "properties":
        "devices":
          "type": "array"
          "items":
            "title": "nextId"
            "required":
              - "groupChain"
            "type": "object"
            "properties":
              "groupChain":
                "type": "array"
                "example": "[0x1234 --> 0x1246 --> port :1, 0x1234 --> 0x12786 --> port :2]"
    "FilteringObjective":
      "title": "filteringObjective"
      "required":
        - "conditions"
        - "deviceId"
        - "isPermanent"
        - "key"
        - "operation"
        - "priority"
        - "timeout"
        - "type"
      "type": "object"
      "properties":
        "type":
          "type": "string"
          "example": "PERMIT"
        "priority":
          "type": "integer"
          "format": "int64"
          "example": 400000
        "timeout":
          "type": "integer"
          "format": "int64"
          "example": 0
        "isPermanent":
          "type": "boolean"
          "example": true
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "operation":
          "type": "string"
          "example": "ADD"
        "key":
          "title": "key"
          "type": "object"
          "properties":
            "type":
              "type": "string"
              "description": "Ethernet field name"
              "example": "ETH_TYPE"
            "mac":
              "type": "string"
              "example": "00:00:11:00:00:01"
            "ip":
              "type": "string"
              "description": "IP source address"
              "example": "10.1.1.0/24"
            "tcpPort":
              "type": "integer"
              "description": "TCP source address"
              "format": "uint16"
              "example": 1
            "spacingMultiplier":
              "type": "integer"
              "description": "Optical channel spacing multiplier"
              "format": "int64"
              "example": 4
            "ochSignalId":
              "type": "integer"
              "description": "Optical channel signal ID"
              "format": "int64"
              "example": 1
            "tributarySlotBitmap":
              "title": "tributarySlotBitmap"
              "type": "array"
              "description": "OPU (Optical channel Payload Unit) slot bitmap."
        "conditions":
          "type": "array"
          "xml":
            "name": "conditions"
            "wrapped": true
          "items":
            "title": "conditions"
            "type": "object"
            "properties":
              "type":
                "type": "string"
                "description": "Ethernet field name"
                "example": "ETH_TYPE"
              "mac":
                "type": "string"
                "example": "00:00:11:00:00:01"
              "ip":
                "type": "string"
                "description": "IP source address"
                "example": "10.1.1.0/24"
              "tcpPort":
                "type": "integer"
                "description": "TCP source address"
                "format": "uint16"
                "example": 1
              "spacingMultiplier":
                "type": "integer"
                "description": "Optical channel spacing multiplier"
                "format": "int64"
                "example": 4
              "ochSignalId":
                "type": "integer"
                "description": "Optical channel signal ID"
                "format": "int64"
                "example": 1
              "tributarySlotBitmap":
                "title": "tributarySlotBitmap"
                "type": "array"
                "description": "OPU (Optical channel Payload Unit) slot bitmap."
        "treatment":
          "title": "treatment"
          "required":
            - "instructions"
          "type": "object"
          "properties":
            "instructions":
              "title": "treatment"
              "type": "array"
              "items":
                "title": "instructions"
                "required":
                  - "port"
                  - "type"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "example": "OUTPUT"
                  "port":
                    "type": "string"
                    "example": "CONTROLLER"
    "ForwardingObjective":
      "title": "forwardingObjective"
      "required":
        - "deviceId"
        - "flag"
        - "isPermanent"
        - "operation"
        - "priority"
        - "selector"
        - "timeout"
        - "treatment"
      "type": "object"
      "properties":
        "flag":
          "type": "string"
          "example": "SPECIFIC"
        "priority":
          "type": "integer"
          "format": "int32"
          "example": 40000
        "timeout":
          "type": "integer"
          "format": "int32"
          "example": 0
        "isPermanent":
          "type": "boolean"
          "example": true
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "operation":
          "type": "string"
          "example": "ADD"
        "selector":
          "title": "selector"
          "required":
            - "criteria"
          "type": "object"
          "properties":
            "criteria":
              "type": "array"
              "xml":
                "name": "criteria"
                "wrapped": true
              "items":
                "title": "criteria"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "description": "Ethernet field name"
                    "example": "ETH_TYPE"
                  "mac":
                    "type": "string"
                    "example": "00:00:11:00:00:01"
                  "ip":
                    "type": "string"
                    "description": "IP source address"
                    "example": "10.1.1.0/24"
                  "tcpPort":
                    "type": "integer"
                    "description": "TCP source address"
                    "format": "uint16"
                    "example": 1
                  "spacingMultiplier":
                    "type": "integer"
                    "description": "Optical channel spacing multiplier"
                    "format": "int64"
                    "example": 4
                  "ochSignalId":
                    "type": "integer"
                    "description": "Optical channel signal ID"
                    "format": "int64"
                    "example": 1
                  "tributarySlotBitmap":
                    "title": "tributarySlotBitmap"
                    "type": "array"
                    "description": "OPU (Optical channel Payload Unit) slot bitmap."
        "treatment":
          "title": "treatment"
          "required":
            - "instructions"
          "type": "object"
          "properties":
            "instructions":
              "title": "treatment"
              "type": "array"
              "items":
                "title": "instructions"
                "required":
                  - "port"
                  - "type"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "example": "OUTPUT"
                  "port":
                    "type": "string"
                    "example": "CONTROLLER"
    "NextObjective":
      "title": "nextObjective"
      "required":
        - "deviceId"
        - "id"
        - "isPermanent"
        - "meta"
        - "operation"
        - "priority"
        - "timeout"
        - "treatments"
        - "type"
      "type": "object"
      "properties":
        "type":
          "type": "string"
          "example": "HASHED"
        "id":
          "type": "integer"
          "format": "int64"
          "example": 1
        "priority":
          "type": "integer"
          "format": "int64"
          "example": 400000
        "timeout":
          "type": "integer"
          "format": "int64"
          "example": 0
        "isPermanent":
          "type": "boolean"
          "example": true
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "operation":
          "type": "string"
          "example": "ADD"
        "meta":
          "title": "meta"
          "required":
            - "criteria"
          "type": "object"
          "properties":
            "criteria":
              "type": "array"
              "xml":
                "name": "criteria"
                "wrapped": true
              "items":
                "title": "criteria"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "description": "Ethernet field name"
                    "example": "ETH_TYPE"
                  "mac":
                    "type": "string"
                    "example": "00:00:11:00:00:01"
                  "ip":
                    "type": "string"
                    "description": "IP source address"
                    "example": "10.1.1.0/24"
                  "tcpPort":
                    "type": "integer"
                    "description": "TCP source address"
                    "format": "uint16"
                    "example": 1
                  "spacingMultiplier":
                    "type": "integer"
                    "description": "Optical channel spacing multiplier"
                    "format": "int64"
                    "example": 4
                  "ochSignalId":
                    "type": "integer"
                    "description": "Optical channel signal ID"
                    "format": "int64"
                    "example": 1
                  "tributarySlotBitmap":
                    "title": "tributarySlotBitmap"
                    "type": "array"
                    "description": "OPU (Optical channel Payload Unit) slot bitmap."
        "treatments":
          "type": "array"
          "xml":
            "name": "treatments"
            "wrapped": true
          "items":
            "title": "treatments"
            "type": "object"
            "properties":
              "instructions":
                "title": "instructions"
                "type": "array"
                "items":
                  "title": "instructions"
                  "required":
                    - "port"
                    - "type"
                  "type": "object"
                  "properties":
                    "type":
                      "type": "string"
                      "example": "OUTPUT"
                    "port":
                      "type": "string"
                      "example": "CONTROLLER"
    "NextId":
      "title": "nextId"
      "type": "object"
      "properties":
        "nextId":
          "type": "integer"
          "format": "int64"
          "example": 3
    "ObjectivePolicy":
      "title": "objectivePolicy"
      "required":
        - "policy"
      "type": "object"
      "properties":
        "policy":
          "type": "string"
          "example": "policy expression"
    "FlowEntries":
      "title": "flows"
      "required":
        - "flows"
      "type": "object"
      "properties":
        "flows":
          "type": "array"
          "xml":
            "name": "flows"
            "wrapped": true
          "items":
            "title": "flow"
            "required":
              - "appId"
              - "bytes"
              - "deviceId"
              - "groupId"
              - "id"
              - "isPermanent"
              - "lastSeen"
              - "life"
              - "liveType"
              - "packets"
              - "priority"
              - "state"
              - "tableId"
              - "timeout"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "12103425214920339"
              "tableId":
                "type": "integer"
                "format": "int32"
                "example": 3
              "appId":
                "type": "string"
                "example": "org.onosproject.core"
              "groupId":
                "type": "integer"
                "format": "int64"
                "example": 0
              "priority":
                "type": "integer"
                "format": "int32"
                "example": 40000
              "timeout":
                "type": "integer"
                "format": "int32"
                "example": 0
              "isPermanent":
                "type": "boolean"
                "example": true
              "deviceId":
                "type": "string"
                "example": "of:0000000000000003"
              "state":
                "type": "string"
                "example": "ADDED"
              "life":
                "type": "integer"
                "format": "int64"
                "example": 69889
              "packets":
                "type": "integer"
                "format": "int64"
                "example": 22546
              "bytes":
                "type": "integer"
                "format": "int64"
                "example": 1826226
              "liveType":
                "type": "string"
                "example": "UNKNOWN"
              "lastSeen":
                "type": "integer"
                "format": "int64"
                "example": 1447892365670
              "treatment":
                "title": "treatment"
                "required":
                  - "deferred"
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instruction"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "example": "CONTROLLER"
                  "deferred":
                    "type": "array"
                    "xml":
                      "name": "deferred"
                      "wrapped": true
                    "items":
                      "type": "string"
              "selector":
                "title": "selector"
                "required":
                  - "criteria"
                "type": "object"
                "properties":
                  "criteria":
                    "type": "array"
                    "xml":
                      "name": "criteria"
                      "wrapped": true
                    "items":
                      "title": "criteria"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "description": "Ethernet field name"
                          "example": "ETH_TYPE"
                        "mac":
                          "type": "string"
                          "example": "00:00:11:00:00:01"
                        "ip":
                          "type": "string"
                          "description": "IP source address"
                          "example": "10.1.1.0/24"
                        "tcpPort":
                          "type": "integer"
                          "description": "TCP source address"
                          "format": "uint16"
                          "example": 1
                        "spacingMultiplier":
                          "type": "integer"
                          "description": "Optical channel spacing multiplier"
                          "format": "int64"
                          "example": 4
                        "ochSignalId":
                          "type": "integer"
                          "description": "Optical channel signal ID"
                          "format": "int64"
                          "example": 1
                        "tributarySlotBitmap":
                          "title": "tributarySlotBitmap"
                          "type": "array"
                          "description": "OPU (Optical channel Payload Unit) slot bitmap."
    "FlowsBatchPost":
      "title": "flows"
      "required":
        - "flows"
      "type": "object"
      "properties":
        "flows":
          "type": "array"
          "xml":
            "name": "flows"
            "wrapped": true
          "items":
            "title": "flow"
            "required":
              - "deviceId"
              - "isPermanent"
              - "priority"
              - "timeout"
            "type": "object"
            "properties":
              "priority":
                "type": "integer"
                "format": "int32"
                "example": 40000
              "timeout":
                "type": "integer"
                "format": "int32"
                "example": 0
              "isPermanent":
                "type": "boolean"
                "example": true
              "deviceId":
                "type": "string"
                "example": "of:0000000000000001"
              "treatment":
                "title": "treatment"
                "required":
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instructions"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "example": "CONTROLLER"
              "selector":
                "title": "selector"
                "required":
                  - "criteria"
                "type": "object"
                "properties":
                  "criteria":
                    "type": "array"
                    "xml":
                      "name": "criteria"
                      "wrapped": true
                    "items":
                      "title": "criteria"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "description": "Ethernet field name"
                          "example": "ETH_TYPE"
    "FlowRules":
      "title": "flows"
      "required":
        - "flows"
      "type": "object"
      "properties":
        "flows":
          "type": "array"
          "xml":
            "name": "flows"
            "wrapped": true
          "items":
            "title": "flow"
            "required":
              - "appId"
              - "deviceId"
              - "groupId"
              - "id"
              - "isPermanent"
              - "liveType"
              - "priority"
              - "tableId"
              - "timeout"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "12103425214920339"
              "tableId":
                "type": "integer"
                "format": "int32"
                "example": 3
              "appId":
                "type": "string"
                "example": "org.onosproject.core"
              "groupId":
                "type": "integer"
                "format": "int64"
                "example": 0
              "priority":
                "type": "integer"
                "format": "int32"
                "example": 40000
              "timeout":
                "type": "integer"
                "format": "int32"
                "example": 0
              "isPermanent":
                "type": "boolean"
                "example": true
              "deviceId":
                "type": "string"
                "example": "of:0000000000000003"
              "liveType":
                "type": "string"
                "example": "UNKNOWN"
              "treatment":
                "title": "treatment"
                "required":
                  - "deferred"
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instruction"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "example": "CONTROLLER"
                  "deferred":
                    "type": "array"
                    "xml":
                      "name": "deferred"
                      "wrapped": true
                    "items":
                      "type": "string"
              "selector":
                "title": "selector"
                "required":
                  - "criteria"
                "type": "object"
                "properties":
                  "criteria":
                    "type": "array"
                    "xml":
                      "name": "criteria"
                      "wrapped": true
                    "items":
                      "title": "criteria"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "description": "Ethernet field name"
                          "example": "ETH_TYPE"
                        "mac":
                          "type": "string"
                          "example": "00:00:11:00:00:01"
                        "ip":
                          "type": "string"
                          "description": "IP source address"
                          "example": "10.1.1.0/24"
                        "tcpPort":
                          "type": "integer"
                          "description": "TCP source address"
                          "format": "uint16"
                          "example": 1
                        "spacingMultiplier":
                          "type": "integer"
                          "description": "Optical channel spacing multiplier"
                          "format": "int64"
                          "example": 4
                        "ochSignalId":
                          "type": "integer"
                          "description": "Optical channel signal ID"
                          "format": "int64"
                          "example": 1
                        "tributarySlotBitmap":
                          "title": "tributarySlotBitmap"
                          "type": "array"
                          "description": "OPU (Optical channel Payload Unit) slot bitmap."
    "FlowsPost":
      "title": "flow"
      "required":
        - "deviceId"
        - "isPermanent"
        - "priority"
        - "timeout"
      "type": "object"
      "properties":
        "priority":
          "type": "integer"
          "format": "int32"
          "example": 40000
        "timeout":
          "type": "integer"
          "format": "int32"
          "example": 0
        "isPermanent":
          "type": "boolean"
          "example": true
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "treatment":
          "title": "treatment"
          "required":
            - "instructions"
          "type": "object"
          "properties":
            "instructions":
              "title": "treatment"
              "type": "array"
              "items":
                "title": "instructions"
                "required":
                  - "port"
                  - "type"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "example": "OUTPUT"
                  "port":
                    "type": "string"
                    "example": "CONTROLLER"
        "selector":
          "title": "selector"
          "required":
            - "criteria"
          "type": "object"
          "properties":
            "criteria":
              "type": "array"
              "xml":
                "name": "criteria"
                "wrapped": true
              "items":
                "title": "criteria"
                "type": "object"
                "properties":
                  "type":
                    "type": "string"
                    "description": "Ethernet field name"
                    "example": "ETH_TYPE"
    "Groups":
      "title": "groups"
      "required":
        - "groups"
      "type": "object"
      "properties":
        "groups":
          "type": "array"
          "xml":
            "name": "groups"
            "wrapped": true
          "items":
            "title": "group"
            "required":
              - "appCookie"
              - "appId"
              - "buckets"
              - "bytes"
              - "deviceId"
              - "id"
              - "life"
              - "packets"
              - "referenceCount"
              - "state"
              - "type"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "description": "group id"
                "example": "1"
              "state":
                "type": "string"
                "description": "state of the group object"
                "example": "PENDING_ADD"
              "life":
                "type": "integer"
                "description": "number of milliseconds this group has been alive"
                "format": "int64"
                "example": 69889
              "packets":
                "type": "integer"
                "description": "number of packets processed by this group"
                "format": "int64"
                "example": 22546
              "bytes":
                "type": "integer"
                "description": "number of bytes processed by this group"
                "format": "int64"
                "example": 1826226
              "referenceCount":
                "type": "integer"
                "description": "number of flow rules or other groups reference this group"
                "format": "int64"
                "example": 1826226
              "type":
                "type": "string"
                "description": "types of the group"
                "example": "ALL"
              "deviceId":
                "type": "string"
                "description": "device identifier"
                "example": "of:0000000000000003"
              "appId":
                "type": "string"
                "description": "application identifier"
                "example": "org.onosproject.rest"
              "appCookie":
                "type": "string"
                "description": "application cookie"
                "example": "0x1234abcd"
              "buckets":
                "type": "array"
                "xml":
                  "name": "buckets"
                  "wrapped": true
                "items":
                  "title": "buckets"
                  "required":
                    - "treatment"
                    - "watchGroup"
                    - "watchPort"
                    - "weight"
                  "type": "object"
                  "properties":
                    "treatment":
                      "title": "treatment"
                      "required":
                        - "instructions"
                      "type": "object"
                      "properties":
                        "instructions":
                          "title": "treatment"
                          "type": "array"
                          "items":
                            "title": "instructions"
                            "required":
                              - "port"
                              - "type"
                            "type": "object"
                            "properties":
                              "type":
                                "type": "string"
                                "description": "instruction type"
                                "example": "OUTPUT"
                              "port":
                                "type": "string"
                                "description": "port number"
                                "example": "2"
                    "weight":
                      "type": "integer"
                      "description": "weight of select group bucket"
                      "format": "int16"
                    "watchPort":
                      "type": "string"
                      "description": "port number used for liveness detection for a failover bucket"
                      "example": "2"
                    "watchGroup":
                      "type": "string"
                      "description": "group identifier used for liveness detection for a failover bucket"
                      "example": "1"
    "Group":
      "title": "group"
      "required":
        - "appCookie"
        - "appId"
        - "buckets"
        - "bytes"
        - "deviceId"
        - "id"
        - "life"
        - "packets"
        - "referenceCount"
        - "state"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "description": "group id"
          "example": "1"
        "state":
          "type": "string"
          "description": "state of the group object"
          "example": "PENDING_ADD"
        "life":
          "type": "integer"
          "description": "number of milliseconds this group has been alive"
          "format": "int64"
          "example": 69889
        "packets":
          "type": "integer"
          "description": "number of packets processed by this group"
          "format": "int64"
          "example": 22546
        "bytes":
          "type": "integer"
          "description": "number of bytes processed by this group"
          "format": "int64"
          "example": 1826226
        "referenceCount":
          "type": "integer"
          "description": "number of flow rules or other groups reference this group"
          "format": "int64"
          "example": 1826226
        "type":
          "type": "string"
          "description": "types of the group"
          "example": "ALL"
        "deviceId":
          "type": "string"
          "description": "device identifier"
          "example": "of:0000000000000003"
        "appId":
          "type": "string"
          "description": "application identifier"
          "example": "org.onosproject.rest"
        "appCookie":
          "type": "string"
          "description": "application cookie"
          "example": "0x1234abcd"
        "buckets":
          "type": "array"
          "xml":
            "name": "buckets"
            "wrapped": true
          "items":
            "title": "buckets"
            "required":
              - "treatment"
              - "watchGroup"
              - "watchPort"
              - "weight"
            "type": "object"
            "properties":
              "treatment":
                "title": "treatment"
                "required":
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instructions"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "description": "instruction type"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "description": "port number"
                          "example": "2"
              "weight":
                "type": "integer"
                "description": "weight of select group bucket"
                "format": "int16"
              "watchPort":
                "type": "string"
                "description": "port number used for liveness detection for a failover bucket"
                "example": "2"
              "watchGroup":
                "type": "string"
                "description": "group identifier used for liveness detection for a failover bucket"
                "example": "1"
    "GroupsPost":
      "title": "group"
      "required":
        - "appCookie"
        - "buckets"
        - "groupId"
        - "type"
      "type": "object"
      "properties":
        "type":
          "type": "string"
          "example": "ALL"
        "appCookie":
          "type": "string"
          "description": "application cookie. Arbitrary length byte array represented in hex string"
          "example": "0x1234abcd"
        "groupId":
          "type": "string"
          "example": "1"
        "buckets":
          "type": "array"
          "xml":
            "name": "buckets"
            "wrapped": true
          "items":
            "title": "buckets"
            "required":
              - "treatment"
            "type": "object"
            "properties":
              "treatment":
                "title": "treatment"
                "required":
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instructions"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "example": "2"
    "GroupsBucketsPost":
      "title": "buckets"
      "required":
        - "buckets"
      "type": "object"
      "properties":
        "buckets":
          "type": "array"
          "xml":
            "name": "buckets"
            "wrapped": true
          "items":
            "title": "buckets"
            "required":
              - "treatment"
            "type": "object"
            "properties":
              "treatment":
                "title": "treatment"
                "required":
                  - "instructions"
                "type": "object"
                "properties":
                  "instructions":
                    "title": "treatment"
                    "type": "array"
                    "items":
                      "title": "instructions"
                      "required":
                        - "port"
                        - "type"
                      "type": "object"
                      "properties":
                        "type":
                          "type": "string"
                          "example": "OUTPUT"
                        "port":
                          "type": "string"
                          "example": "2"
    "Hosts":
      "title": "hosts"
      "required":
        - "hosts"
      "type": "object"
      "properties":
        "hosts":
          "type": "array"
          "xml":
            "name": "hosts"
            "wrapped": true
          "items":
            "title": "host"
            "required":
              - "id"
              - "ipAddresses"
              - "mac"
              - "vlan"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "46:E4:3C:A4:17:C8/-1"
              "mac":
                "type": "string"
                "example": "46:E4:3C:A4:17:C8"
              "vlan":
                "type": "string"
                "example": "-1"
              "ipAddresses":
                "type": "array"
                "xml":
                  "name": "hosts"
                  "wrapped": true
                "items":
                  "type": "string"
                  "example": "127.0.0.1"
              "locations":
                "type": "array"
                "items":
                  "title": "location"
                  "required":
                    - "elementId"
                    - "port"
                  "type": "object"
                  "properties":
                    "elementId":
                      "type": "string"
                      "example": "of:0000000000000002"
                    "port":
                      "type": "string"
                      "example": "3"
              "auxLocations":
                "type": "array"
                "items":
                  "title": "location"
                  "required":
                    - "elementId"
                    - "port"
                  "type": "object"
                  "properties":
                    "elementId":
                      "type": "string"
                      "example": "of:0000000000000003"
                    "port":
                      "type": "string"
                      "example": "4"
              "innerVlan":
                "type": "string"
                "example": "-1"
              "outerTpid":
                "type": "string"
                "example": "unknown"
    "Host":
      "title": "host"
      "required":
        - "id"
        - "ipAddresses"
        - "mac"
        - "vlan"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "46:E4:3C:A4:17:C8/-1"
        "mac":
          "type": "string"
          "example": "46:E4:3C:A4:17:C8"
        "vlan":
          "type": "string"
          "example": "-1"
        "ipAddresses":
          "type": "array"
          "xml":
            "name": "hosts"
            "wrapped": true
          "items":
            "type": "string"
            "example": "127.0.0.1"
        "locations":
          "type": "array"
          "items":
            "title": "location"
            "required":
              - "elementId"
              - "port"
            "type": "object"
            "properties":
              "elementId":
                "type": "string"
                "example": "of:0000000000000002"
              "port":
                "type": "string"
                "example": "3"
        "auxLocations":
          "type": "array"
          "items":
            "title": "location"
            "required":
              - "elementId"
              - "port"
            "type": "object"
            "properties":
              "elementId":
                "type": "string"
                "example": "of:0000000000000003"
              "port":
                "type": "string"
                "example": "4"
        "innerVlan":
          "type": "string"
          "example": "-1"
        "outerTpid":
          "type": "string"
          "example": "unknown"
    "HostPut":
      "title": "host"
      "required":
        - "ipAddresses"
        - "mac"
        - "vlan"
      "type": "object"
      "properties":
        "mac":
          "type": "string"
          "example": "46:E4:3C:A4:17:C8"
        "vlan":
          "type": "string"
          "example": "-1"
        "ipAddresses":
          "type": "array"
          "xml":
            "name": "hosts"
            "wrapped": true
          "items":
            "type": "string"
            "example": "127.0.0.1"
        "locations":
          "type": "array"
          "items":
            "title": "location"
            "required":
              - "elementId"
              - "port"
            "type": "object"
            "properties":
              "elementId":
                "type": "string"
                "example": "of:0000000000000002"
              "port":
                "type": "string"
                "example": "3"
        "auxLocations":
          "type": "array"
          "items":
            "title": "location"
            "required":
              - "elementId"
              - "port"
            "type": "object"
            "properties":
              "elementId":
                "type": "string"
                "example": "of:0000000000000003"
              "port":
                "type": "string"
                "example": "4"
        "innerVlan":
          "type": "string"
          "example": "10"
        "outerTpid":
          "type": "string"
          "example": "0x88a8"
    "Intents":
      "title": "intents"
      "required":
        - "intents"
      "type": "object"
      "properties":
        "intents":
          "type": "array"
          "xml":
            "name": "intents"
            "wrapped": true
          "items":
            "title": "host"
            "required":
              - "appId"
              - "id"
              - "type"
            "type": "object"
            "properties":
              "type":
                "type": "string"
                "example": "HostToHostIntent"
              "id":
                "type": "string"
                "example": "0x6"
              "appId":
                "type": "string"
                "example": "org.onosproject.ovsdb"
              "priority":
                "type": "integer"
                "format": "int64"
                "example": 55
              "resources":
                "type": "array"
                "xml":
                  "name": "resources"
                  "wrapped": true
                "items":
                  "type": "string"
                  "example": "46:E4:3C:A4:17:C8/-1"
    "Minisummary":
      "title": "All"
      "required":
        - "All"
      "type": "object"
      "properties":
        "All":
          "required":
            - "compiling"
            - "failed"
            - "installReq"
            - "installed"
            - "installing"
            - "recompiling"
            - "total"
            - "unknownState"
            - "withdrawReq"
            - "withdrawing"
            - "withdrawn"
          "type": "object"
          "properties":
            "total":
              "type": "integer"
              "example": 1
            "installed":
              "type": "integer"
              "example": 0
            "failed":
              "type": "integer"
              "example": 0
            "installReq":
              "type": "integer"
              "example": 0
            "installing":
              "type": "integer"
              "example": 0
            "compiling":
              "type": "integer"
              "example": 0
            "recompiling":
              "type": "integer"
              "example": 0
            "withdrawReq":
              "type": "integer"
              "example": 0
            "withdrawing":
              "type": "integer"
              "example": 0
            "withdrawn":
              "type": "integer"
              "example": 0
            "unknownState":
              "type": "integer"
              "example": 0
    "Relatedflows":
      "title": "relatedflows"
      "required":
        - "appId"
        - "id"
        - "paths"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "0x5"
        "appId":
          "type": "string"
          "example": "org.onosproject.ovsdb"
        "type":
          "type": "string"
          "example": "HostToHostIntent"
        "paths":
          "type": "array"
          "xml":
            "name": "paths"
            "wrapped": true
          "items":
            "type": "array"
            "xml":
              "name": "flows"
              "wrapped": true
            "items":
              "title": "flow"
              "required":
                - "appId"
                - "bytes"
                - "deviceId"
                - "groupId"
                - "id"
                - "isPermanent"
                - "lastSeen"
                - "life"
                - "packets"
                - "priority"
                - "state"
                - "tableId"
                - "timeout"
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                  "example": "12103425214920339"
                "tableId":
                  "type": "integer"
                  "format": "int32"
                  "example": 3
                "appId":
                  "type": "string"
                  "example": "org.onosproject.core"
                "groupId":
                  "type": "integer"
                  "format": "int64"
                  "example": 0
                "priority":
                  "type": "integer"
                  "format": "int32"
                  "example": 40000
                "timeout":
                  "type": "integer"
                  "format": "int32"
                  "example": 0
                "isPermanent":
                  "type": "boolean"
                  "example": true
                "deviceId":
                  "type": "string"
                  "example": "of:0000000000000003"
                "state":
                  "type": "string"
                  "example": "ADDED"
                "life":
                  "type": "integer"
                  "format": "int64"
                  "example": 69889
                "packets":
                  "type": "integer"
                  "format": "int64"
                  "example": 22546
                "bytes":
                  "type": "integer"
                  "format": "int64"
                  "example": 1826226
                "lastSeen":
                  "type": "integer"
                  "format": "int64"
                  "example": 1447892365670
                "treatment":
                  "title": "treatment"
                  "required":
                    - "deferred"
                    - "instructions"
                  "type": "object"
                  "properties":
                    "instructions":
                      "title": "treatment"
                      "type": "array"
                      "items":
                        "title": "instruction"
                        "required":
                          - "port"
                          - "type"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "example": "OUTPUT"
                          "port":
                            "type": "string"
                            "example": "CONTROLLER"
                    "deferred":
                      "type": "array"
                      "xml":
                        "name": "deferred"
                        "wrapped": true
                      "items":
                        "type": "string"
                "selector":
                  "title": "selector"
                  "required":
                    - "criteria"
                  "type": "object"
                  "properties":
                    "criteria":
                      "type": "array"
                      "xml":
                        "name": "criteria"
                        "wrapped": true
                      "items":
                        "title": "criteria"
                        "type": "object"
                        "properties":
                          "type":
                            "type": "string"
                            "description": "Ethernet field name"
                            "example": "ETH_TYPE"
                          "mac":
                            "type": "string"
                            "example": "00:00:11:00:00:01"
    "IntentHost":
      "title": "host"
      "required":
        - "appId"
        - "one"
        - "priority"
        - "two"
        - "type"
      "type": "object"
      "properties":
        "type":
          "type": "string"
          "example": "HostToHostIntent"
        "appId":
          "type": "string"
          "example": "org.onosproject.ovsdb"
        "priority":
          "type": "integer"
          "format": "int64"
          "example": 55
        "one":
          "type": "string"
          "example": "46:E4:3C:A4:17:C8/-1"
        "two":
          "type": "string"
          "example": "08:00:27:56:8a:15/-1"
    "LinksGet":
      "title": "links"
      "required":
        - "links"
      "type": "object"
      "properties":
        "links":
          "type": "array"
          "xml":
            "name": "links"
            "wrapped": true
          "items":
            "title": "link"
            "required":
              - "dst"
              - "src"
              - "state"
              - "type"
            "type": "object"
            "properties":
              "src":
                "title": "src"
                "required":
                  - "device"
                  - "port"
                "type": "object"
                "properties":
                  "port":
                    "type": "string"
                    "example": "3"
                  "device":
                    "type": "string"
                    "example": "of:0000000000000002"
              "dst":
                "title": "dst"
                "required":
                  - "device"
                  - "port"
                "type": "object"
                "properties":
                  "port":
                    "type": "string"
                    "example": "2"
                  "device":
                    "type": "string"
                    "example": "of:0000000000000003"
              "type":
                "type": "string"
                "example": "DIRECT"
              "state":
                "type": "string"
                "example": "ACTIVE"
    "VanishedLink":
      "required":
        - "active"
      "type": "object"
      "properties":
        "active":
          "type": "boolean"
          "example": true
    "MastershipRole":
      "title": "role"
      "required":
        - "role"
      "type": "object"
      "properties":
        "role":
          "type": "string"
          "example": "MASTER"
    "NodeId":
      "title": "nodeId"
      "required":
        - "nodeId"
      "type": "object"
      "properties":
        "nodeId":
          "type": "string"
          "example": "1"
    "RoleInfo":
      "title": "roleInfo"
      "required":
        - "backups"
        - "master"
      "type": "object"
      "properties":
        "master":
          "type": "string"
          "example": "1"
        "backups":
          "type": "array"
          "xml":
            "name": "backups"
            "wrapped": true
          "items":
            "type": "string"
            "example": "1"
    "DeviceIds":
      "title": "deviceIds"
      "required":
        - "deviceIds"
      "type": "object"
      "properties":
        "deviceIds":
          "type": "array"
          "xml":
            "name": "deviceId"
            "wrapped": true
          "items":
            "type": "string"
            "example": "of:0000000000000001"
    "MastershipPut":
      "title": "mastership"
      "required":
        - "deviceId"
        - "nodeId"
        - "role"
      "type": "object"
      "properties":
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "nodeId":
          "type": "string"
          "example": "1"
        "role":
          "type": "string"
          "example": "MASTER"
    "Meters":
      "title": "meters"
      "required":
        - "meters"
      "type": "object"
      "properties":
        "meters":
          "type": "array"
          "xml":
            "name": "meters"
            "wrapped": true
          "items":
            "title": "meter"
            "required":
              - "appId"
              - "bands"
              - "burst"
              - "bytes"
              - "deviceId"
              - "id"
              - "life"
              - "packets"
              - "refCount"
              - "state"
              - "unit"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "1"
              "appId":
                "type": "string"
                "example": "org.onosproject.rest"
              "deviceId":
                "type": "string"
                "example": "of:0000000000000001"
              "unit":
                "type": "string"
                "example": "KB_PER_SEC"
              "burst":
                "type": "boolean"
                "example": true
              "state":
                "type": "string"
                "example": "ADDED"
              "life":
                "type": "integer"
                "format": "int64"
                "example": 0
              "refCount":
                "type": "integer"
                "format": "int64"
                "example": 0
              "packets":
                "type": "integer"
                "format": "int64"
                "example": 0
              "bytes":
                "type": "integer"
                "format": "int64"
                "example": 0
              "bands":
                "type": "array"
                "xml":
                  "name": "bands"
                  "wrapped": true
                "items":
                  "title": "bands"
                  "required":
                    - "burstSize"
                    - "bytes"
                    - "packets"
                    - "prec"
                    - "rate"
                    - "type"
                  "type": "object"
                  "properties":
                    "type":
                      "type": "string"
                      "example": "REMARK"
                    "rate":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "burstSize":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "prec":
                      "type": "integer"
                      "format": "int16"
                      "example": 0
                    "packets":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "bytes":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
    "Meter":
      "title": "meter"
      "required":
        - "appId"
        - "bands"
        - "burst"
        - "bytes"
        - "deviceId"
        - "id"
        - "life"
        - "packets"
        - "refCount"
        - "state"
        - "unit"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "1"
        "appId":
          "type": "string"
          "example": "org.onosproject.rest"
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "unit":
          "type": "string"
          "example": "KB_PER_SEC"
        "burst":
          "type": "boolean"
          "example": true
        "state":
          "type": "string"
          "example": "ADDED"
        "life":
          "type": "integer"
          "format": "int64"
          "example": 0
        "refCount":
          "type": "integer"
          "format": "int64"
          "example": 0
        "packets":
          "type": "integer"
          "format": "int64"
          "example": 0
        "bytes":
          "type": "integer"
          "format": "int64"
          "example": 0
        "bands":
          "type": "array"
          "xml":
            "name": "bands"
            "wrapped": true
          "items":
            "title": "bands"
            "required":
              - "burstSize"
              - "bytes"
              - "packets"
              - "prec"
              - "rate"
              - "type"
            "type": "object"
            "properties":
              "type":
                "type": "string"
                "example": "REMARK"
              "rate":
                "type": "integer"
                "format": "int64"
                "example": 0
              "burstSize":
                "type": "integer"
                "format": "int64"
                "example": 0
              "prec":
                "type": "integer"
                "format": "int16"
                "example": 0
              "packets":
                "type": "integer"
                "format": "int64"
                "example": 0
              "bytes":
                "type": "integer"
                "format": "int64"
                "example": 0
    "MeterPost":
      "title": "meter"
      "required":
        - "bands"
        - "burst"
        - "deviceId"
        - "unit"
      "type": "object"
      "properties":
        "deviceId":
          "type": "string"
          "example": "of:0000000000000001"
        "unit":
          "type": "string"
          "example": "KB_PER_SEC"
        "burst":
          "type": "boolean"
          "example": true
        "bands":
          "type": "array"
          "xml":
            "name": "bands"
            "wrapped": true
          "items":
            "title": "bands"
            "required":
              - "burstSize"
              - "prec"
              - "rate"
              - "type"
            "type": "object"
            "properties":
              "type":
                "type": "string"
                "example": "REMARK"
              "rate":
                "type": "integer"
                "format": "int64"
                "example": 0
              "burstSize":
                "type": "integer"
                "format": "int64"
                "example": 0
              "prec":
                "type": "integer"
                "format": "int16"
                "example": 0
    "Metrics":
      "title": "metrics"
      "required":
        - "metrics"
      "type": "object"
      "properties":
        "metrics":
          "type": "array"
          "xml":
            "name": "metric"
            "wrapped": true
          "items":
            "title": "metric"
            "required":
              - "metric"
            "type": "object"
            "properties":
              "metric":
                "title": "property"
                "type": "object"
                "properties":
                  "timer":
                    "title": "timer"
                    "required":
                      - "counter"
                    "type": "object"
                    "properties":
                      "counter":
                        "type": "integer"
                        "example": 1
    "Metric":
      "title": "metric"
      "required":
        - "metric"
      "type": "object"
      "properties":
        "metric":
          "title": "property"
          "type": "object"
          "properties":
            "timer":
              "title": "timer"
              "required":
                - "counter"
              "type": "object"
              "properties":
                "counter":
                  "type": "integer"
                  "example": 1
    "McastRoutesGet":
      "title": "routes"
      "required":
        - "routes"
      "type": "object"
      "properties":
        "routes":
          "type": "array"
          "xml":
            "name": "routes"
            "wrapped": true
          "items":
            "title": "route"
            "required":
              - "group"
              - "source"
              - "type"
            "type": "object"
            "properties":
              "source":
                "type": "string"
                "description": "Multicast source IP address"
                "example": "10.1.1.0"
              "group":
                "type": "string"
                "description": "Multicast group IP address"
                "example": "10.1.1.0"
              "type":
                "type": "string"
                "description": "Type of the multicast route"
                "example": "STATIC"
    "McastRoutePost":
      "title": "route"
      "required":
        - "group"
        - "source"
      "type": "object"
      "properties":
        "source":
          "type": "string"
          "description": "Multicast source IP address"
          "example": "10.1.1.0"
        "group":
          "type": "string"
          "description": "Multicast group IP address"
          "example": "10.1.1.0"
        "ingress":
          "type": "string"
          "description": "Multicast ingress Connection Point device and port"
          "example": "of:0000000000000001/1"
    "McastSinkPost":
      "title": "sinks"
      "required":
        - "sinks"
      "type": "object"
      "properties":
        "sinks":
          "type": "array"
          "xml":
            "name": "sinks"
            "wrapped": true
          "items":
            "title": "sink"
            "type": "string"
            "example": "of:0000000000000001/1"
    "PacketProcessorsGet":
      "title": "packet-processors"
      "required":
        - "packet-processors"
      "type": "object"
      "properties":
        "packet-processors":
          "type": "array"
          "xml":
            "name": "packet-processors"
            "wrapped": true
          "items":
            "title": "packet-processors"
            "required":
              - "avgNanos"
              - "class"
              - "packets"
              - "priority"
            "type": "object"
            "properties":
              "priority":
                "type": "string"
                "example": "advisor(0)"
              "class":
                "type": "string"
                "example": "org.onosproject.provider.host.impl.HostLocationProvider$InternalHostProvider"
              "packets":
                "type": "integer"
                "example": 568376
              "avgNanos":
                "type": "integer"
                "example": 5683
    "Paths":
      "title": "paths"
      "required":
        - "paths"
      "type": "object"
      "properties":
        "paths":
          "type": "array"
          "xml":
            "name": "hosts"
            "wrapped": true
          "items":
            "title": "host"
            "required":
              - "cost"
              - "links"
            "type": "object"
            "properties":
              "cost":
                "type": "integer"
                "format": "int64"
                "example": 2
              "links":
                "type": "array"
                "xml":
                  "name": "links"
                  "wrapped": true
                "items":
                  "title": "link"
                  "required":
                    - "dst"
                    - "src"
                    - "state"
                    - "type"
                  "type": "object"
                  "properties":
                    "src":
                      "title": "src"
                      "required":
                        - "device"
                        - "port"
                      "type": "object"
                      "properties":
                        "port":
                          "type": "string"
                          "example": "3"
                        "device":
                          "type": "string"
                          "example": "of:0000000000000002"
                    "dst":
                      "title": "dst"
                      "required":
                        - "device"
                        - "port"
                      "type": "object"
                      "properties":
                        "port":
                          "type": "string"
                          "example": "2"
                        "device":
                          "type": "string"
                          "example": "of:0000000000000003"
                    "type":
                      "type": "string"
                      "example": "DIRECT"
                    "state":
                      "type": "string"
                      "example": "ACTIVE"
    "Regions":
      "title": "regions"
      "required":
        - "regions"
      "type": "object"
      "properties":
        "regions":
          "type": "array"
          "xml":
            "name": "regions"
            "wrapped": true
          "items":
            "title": "region"
            "required":
              - "id"
              - "masters"
              - "name"
              - "type"
            "type": "object"
            "properties":
              "id":
                "type": "string"
                "example": "1"
              "name":
                "type": "string"
                "example": "region"
              "type":
                "type": "string"
                "example": "ROOM"
              "masters":
                "type": "array"
                "xml":
                  "name": "masters"
                  "wrapped": true
                "items":
                  "type": "array"
                  "xml":
                    "name": "masters"
                    "wrapped": true
                  "items":
                    "type": "string"
                    "example": "1"
    "Region":
      "title": "region"
      "required":
        - "id"
        - "masters"
        - "name"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "1"
        "name":
          "type": "string"
          "example": "region"
        "type":
          "type": "string"
          "example": "ROOM"
        "masters":
          "type": "array"
          "xml":
            "name": "masters"
            "wrapped": true
          "items":
            "type": "array"
            "xml":
              "name": "masters"
              "wrapped": true
            "items":
              "type": "string"
              "example": "1"
    "RegionDeviceIds":
      "title": "deviceIds"
      "required":
        - "deviceIds"
      "type": "object"
      "properties":
        "deviceIds":
          "type": "array"
          "xml":
            "name": "deviceIds"
            "wrapped": true
          "items":
            "type": "string"
            "example": "of:0000000000000001"
    "RegionPost":
      "title": "region"
      "required":
        - "id"
        - "masters"
        - "name"
        - "type"
      "type": "object"
      "properties":
        "id":
          "type": "string"
          "example": "1"
        "name":
          "type": "string"
          "example": "region"
        "type":
          "type": "string"
          "example": "ROOM"
        "masters":
          "type": "array"
          "xml":
            "name": "masters"
            "wrapped": true
          "items":
            "type": "array"
            "xml":
              "name": "masters"
              "wrapped": true
            "items":
              "type": "string"
              "example": "1"
    "StatisticsFlowsLink":
      "title": "loads"
      "required":
        - "loads"
      "type": "object"
      "properties":
        "loads":
          "type": "array"
          "xml":
            "name": "loads"
            "wrapped": true
          "items":
            "title": "loads"
            "required":
              - "latest"
              - "link"
              - "rate"
              - "time"
              - "valid"
            "type": "object"
            "properties":
              "rate":
                "type": "integer"
                "format": "int64"
                "example": 0
              "latest":
                "type": "string"
                "example": "of:0000000000000001"
              "valid":
                "type": "boolean"
                "example": false
              "time":
                "type": "integer"
                "format": "int64"
                "example": 1447980119542
              "link":
                "type": "string"
                "example": "http://10.128.12.1:8181/onos/v1/links?device=of:0000000000000002&port=3"
    "StatisticsFlowsTables":
      "title": "statistics"
      "required":
        - "statistics"
      "type": "object"
      "properties":
        "statistics":
          "type": "array"
          "xml":
            "name": "statistics"
            "wrapped": true
          "items":
            "title": "statistics"
            "required":
              - "table"
            "type": "object"
            "properties":
              "deviceId":
                "type": "string"
                "example": "of:0000000000000001"
              "table":
                "type": "array"
                "xml":
                  "name": "table"
                  "wrapped": true
                "items":
                  "title": "tables"
                  "required":
                    - "activeEntries"
                    - "deviceId"
                    - "packetsLookedUp"
                    - "packetsMathced"
                    - "tableId"
                  "type": "object"
                  "properties":
                    "tableId":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "deviceId":
                      "type": "string"
                      "example": "of:0000000000000001"
                    "activeEntries":
                      "type": "integer"
                      "format": "int64"
                      "example": 3
                    "packetsLookedUp":
                      "type": "integer"
                      "format": "int64"
                      "example": 458530
                    "packetsMathced":
                      "type": "integer"
                      "format": "int64"
                      "example": 458501
    "StatisticsPorts":
      "title": "all-port-statistics"
      "required":
        - "statistics"
      "type": "object"
      "properties":
        "statistics":
          "type": "array"
          "xml":
            "name": "statistics"
            "wrapped": true
          "items":
            "title": "statistics"
            "required":
              - "ports"
            "type": "object"
            "properties":
              "deviceId":
                "type": "string"
                "example": "of:0000000000000001"
              "ports":
                "type": "array"
                "xml":
                  "name": "ports"
                  "wrapped": true
                "items":
                  "title": "ports"
                  "required":
                    - "bytesReceived"
                    - "bytesSent"
                    - "durationSec"
                    - "packetsReceived"
                    - "packetsRxDropped"
                    - "packetsRxErrors"
                    - "packetsSent"
                    - "packetsTxDropped"
                    - "packetsTxErrors"
                    - "port"
                  "type": "object"
                  "properties":
                    "port":
                      "type": "integer"
                      "format": "int64"
                      "example": 1
                    "packetsReceived":
                      "type": "integer"
                      "format": "int64"
                      "example": 98
                    "packetsSent":
                      "type": "integer"
                      "format": "int64"
                      "example": 98
                    "bytesReceived":
                      "type": "integer"
                      "format": "int64"
                      "example": 9162
                    "bytesSent":
                      "type": "integer"
                      "format": "int64"
                      "example": 9162
                    "packetsRxDropped":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "packetsTxDropped":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "packetsRxErrors":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "packetsTxErrors":
                      "type": "integer"
                      "format": "int64"
                      "example": 0
                    "durationSec":
                      "type": "integer"
                      "format": "int64"
                      "example": 90
    "StatisticsFlowsActiveEntries":
      "title": "statistics"
      "required":
        - "statistics"
      "type": "object"
      "properties":
        "statistics":
          "type": "array"
          "xml":
            "name": "statistics"
            "wrapped": true
          "items":
            "title": "statistics"
            "required":
              - "activeEntries"
              - "device"
            "type": "object"
            "properties":
              "device":
                "type": "string"
                "example": "of:0000000000000001"
              "activeEntries":
                "type": "integer"
                "format": "int64"
                "example": 0
    "Topology":
      "title": "topology"
      "required":
        - "clusters"
        - "devices"
        - "links"
        - "time"
      "type": "object"
      "properties":
        "time":
          "type": "integer"
          "format": "int64"
          "example": 183004405835967
        "devices":
          "type": "integer"
          "format": "int64"
          "example": 3
        "links":
          "type": "integer"
          "format": "int64"
          "example": 4
        "clusters":
          "type": "integer"
          "format": "int64"
          "example": 1
    "TopologyClusters":
      "title": "clusters"
      "required":
        - "clusters"
      "type": "object"
      "properties":
        "clusters":
          "type": "array"
          "xml":
            "name": "cluster"
            "wrapped": true
          "items":
            "title": "cluster"
            "required":
              - "deviceCount"
              - "id"
              - "linkCount"
              - "root"
            "type": "object"
            "properties":
              "id":
                "type": "integer"
                "format": "int64"
                "example": 1
              "deviceCount":
                "type": "integer"
                "format": "int64"
                "example": 3
              "linkCount":
                "type": "integer"
                "format": "int64"
                "example": 4
              "root":
                "type": "string"
                "example": "of:0000000000000001"
    "TopologyCluster":
      "title": "device"
      "required":
        - "deviceCount"
        - "id"
        - "linkCount"
        - "root"
      "type": "object"
      "properties":
        "id":
          "type": "integer"
          "format": "int64"
          "example": 1
        "deviceCount":
          "type": "integer"
          "format": "int64"
          "example": 3
        "linkCount":
          "type": "integer"
          "format": "int64"
          "example": 4
        "root":
          "type": "string"
          "example": "of:0000000000000001"
    "TopologyClustersDevices":
      "title": "devices"
      "required":
        - "devices"
      "type": "object"
      "properties":
        "devices":
          "type": "array"
          "xml":
            "name": "cluster"
            "wrapped": true
          "items":
            "title": "device"
            "type": "string"
            "example": "of:0000000000000001"
    "TopologyBroadcast":
      "title": "response"
      "required":
        - "broadcast"
      "type": "object"
      "properties":
        "broadcast":
          "type": "boolean"
          "example": true
    "TopologyInfrastructure":
      "title": "response"
      "required":
        - "infrastructure"
      "type": "object"
      "properties":
        "infrastructure":
          "type": "boolean"
          "example": true